%!PS-Adobe-3.0 EPSF-3.0
%%Title: BMD.pdf
%%Creator: PScript5.dll Version 5.2.2
%%CreationDate: 2/23/2010 17:36:13
%%For: xysong
%%BoundingBox: 16 232 576 608
%%Pages: (atend)
%%Orientation: Portrait
%%PageOrder: Special
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentData: Clean7Bit
%%TargetDevice: (Color LaserWriter 12/660 PS) (2014.108) 2
%%LanguageLevel: 2
%%EndComments

%%BeginDefaults
%%PageBoundingBox: 15 15 582 819
%%ViewingOrientation: 1 0 0 1
%%EndDefaults


%%BeginProlog
%%BeginResource: file Pscript_WinNT_VMErrorHandler 5.0 0
/currentpacking where{pop/oldpack currentpacking def/setpacking where{pop false
setpacking}if}if/$brkpage 64 dict def $brkpage begin/prnt{dup type/stringtype
ne{=string cvs}if dup length 6 mul/tx exch def/ty 10 def currentpoint/toy exch
def/tox exch def 1 setgray newpath tox toy 2 sub moveto 0 ty rlineto tx 0
rlineto 0 ty neg rlineto closepath fill tox toy moveto 0 setgray show}bind def
/nl{currentpoint exch pop lmargin exch moveto 0 -10 rmoveto}def/=={/cp 0 def
typeprint nl}def/typeprint{dup type exec}readonly def/lmargin 72 def/rmargin 72
def/tprint{dup length cp add rmargin gt{nl/cp 0 def}if dup length cp add/cp
exch def prnt}readonly def/cvsprint{=string cvs tprint( )tprint}readonly def
/integertype{cvsprint}readonly def/realtype{cvsprint}readonly def/booleantype
{cvsprint}readonly def/operatortype{(--)tprint =string cvs tprint(-- )tprint}
readonly def/marktype{pop(-mark- )tprint}readonly def/dicttype{pop
(-dictionary- )tprint}readonly def/nulltype{pop(-null- )tprint}readonly def
/filetype{pop(-filestream- )tprint}readonly def/savetype{pop(-savelevel- )
tprint}readonly def/fonttype{pop(-fontid- )tprint}readonly def/nametype{dup
xcheck not{(/)tprint}if cvsprint}readonly def/stringtype{dup rcheck{(\()tprint
tprint(\))tprint}{pop(-string- )tprint}ifelse}readonly def/arraytype{dup rcheck
{dup xcheck{({)tprint{typeprint}forall(})tprint}{([)tprint{typeprint}forall(])
tprint}ifelse}{pop(-array- )tprint}ifelse}readonly def/packedarraytype{dup
rcheck{dup xcheck{({)tprint{typeprint}forall(})tprint}{([)tprint{typeprint}
forall(])tprint}ifelse}{pop(-packedarray- )tprint}ifelse}readonly def/courier
/Courier findfont 10 scalefont def end errordict/handleerror{systemdict begin
$error begin $brkpage begin newerror{/newerror false store vmstatus pop pop 0
ne{grestoreall}if initgraphics courier setfont lmargin 720 moveto errorname
(VMerror)eq{version cvi 2016 ge{userdict/ehsave known{clear userdict/ehsave get
restore 2 vmreclaim}if vmstatus exch pop exch pop PrtVMMsg}if}if systemdict
/showpage get exec(%%[ Error: )print errorname =print(; OffendingCommand: )
print/command load =print( ]%%)= flush}if end end end}dup 0 systemdict put dup
4 $brkpage put bind readonly put/currentpacking where{pop/setpacking where{pop
oldpack setpacking}if}if
%%EndResource
userdict /Pscript_WinNT_Min 100 dict dup begin put
%%BeginResource: file Pscript_WinNT_Min 5.0 0
/b{bind def}bind def/|{def}b/LH/showpage load def/min_initialize{begin userdict
begin}b/min_terminate{pop end end}b/Pscript_Win_Data where{pop}{userdict
/Pscript_Win_Data currentdict put}ifelse/setjn{{statusdict/jobname known
{statusdict/jobname 3 -1 roll put}if}stopped cleartomark}b/colspRefresh{}b
%%EndResource
%%BeginResource: file Pscript_Win_Basic 5.0 0
/d/def load def/,/load load d/~/exch , d/?/ifelse , d/!/pop , d/`/begin , d/^
/index , d/@/dup , d/+/translate , d/$/roll , d/U/userdict , d/M/moveto , d/-
/rlineto , d/&/currentdict , d/:/gsave , d/;/grestore , d/F/false , d/T/true ,
d/N/newpath , d/E/end , d/Ac/arc , d/An/arcn , d/A/ashow , d/D/awidthshow , d/C
/closepath , d/V/div , d/O/eofill , d/L/fill , d/I/lineto , d/-c/curveto , d/-M
/rmoveto , d/+S/scale , d/Ji/setfont , d/Lc/setlinecap , d/Lj/setlinejoin , d
/Lw/setlinewidth , d/Lm/setmiterlimit , d/sd/setdash , d/S/show , d/LH/showpage
, d/K/stroke , d/W/widthshow , d/R/rotate , d/L2? false/languagelevel where{pop
languagelevel 2 ge{pop true}if}if d L2?{/xS/xshow , d/yS/yshow , d/zS/xyshow ,
d}if/b{bind d}bind d/bd{bind d}bind d/xd{~ d}bd/ld{, d}bd/bn/bind ld/lw/Lw ld
/lc/Lc ld/lj/Lj ld/sg/setgray ld/ADO_mxRot null d/self & d/OrgMx matrix
currentmatrix d/reinitialize{: OrgMx setmatrix[/TextInit/GraphInit/UtilsInit
counttomark{@ where{self eq}{F}?{cvx exec}{!}?}repeat cleartomark ;}b
/initialize{`{/Pscript_Win_Data where{!}{U/Pscript_Win_Data & put}?/ADO_mxRot ~
d/TextInitialised? F d reinitialize E}{U/Pscript_Win_Data 230 dict @ ` put
/ADO_mxRot ~ d/TextInitialised? F d reinitialize}?}b/terminate{!{& self eq
{exit}{E}?}loop E}b/suspend/terminate , d/resume{` Pscript_Win_Data `}b U `
/lucas 21690 d/featurebegin{countdictstack lucas[}b/featurecleanup{stopped
{cleartomark @ lucas eq{! exit}if}loop countdictstack ~ sub @ 0 gt{{E}repeat}
{!}?}b E/snap{transform 0.25 sub round 0.25 add ~ 0.25 sub round 0.25 add ~
itransform}b/dsnap{dtransform round ~ round ~ idtransform}b/nonzero_round{@ 0.5
ge{round}{@ -0.5 lt{round}{0 ge{1}{-1}?}?}?}b/nonzero_dsnap{dtransform
nonzero_round ~ nonzero_round ~ idtransform}b U<04>cvn{}put/rr{1 ^ 0 - 0 ~ -
neg 0 - C}b/irp{4 -2 $ + +S fx 4 2 $ M 1 ^ 0 - 0 ~ - neg 0 -}b/rp{4 2 $ M 1 ^ 0
- 0 ~ - neg 0 -}b/solid{[]0 sd}b/g{@ not{U/DefIf_save save put}if U/DefIf_bool
2 ^ put}b/DefIf_El{if U/DefIf_bool get not @{U/DefIf_save get restore}if}b/e
{DefIf_El !}b/UDF{L2?{undefinefont}{!}?}b/UDR{L2?{undefineresource}{! !}?}b
/freeVM{/Courier findfont[40 0 0 -40 0 0]makefont Ji 2 vmreclaim}b/hfRedefFont
{findfont @ length dict `{1 ^/FID ne{d}{! !}?}forall & E @ ` ~{/CharStrings 1
dict `/.notdef 0 d & E d}if/Encoding 256 array 0 1 255{1 ^ ~/.notdef put}for d
E definefont !}bind d/hfMkCIDFont{/CIDFont findresource @ length 2 add dict `{1
^ @/FID eq ~ @/XUID eq ~/UIDBase eq or or{! !}{d}?}forall/CDevProc ~ d/Metrics2
16 dict d/CIDFontName 1 ^ d & E 1 ^ ~/CIDFont defineresource ![~]composefont !}
bind d
%%EndResource
%%BeginResource: file Pscript_Win_Utils_L2 5.0 0
/rf/rectfill , d/fx{1 1 dtransform @ 0 ge{1 sub 0.5}{1 add -0.5}? 3 -1 $ @ 0 ge
{1 sub 0.5}{1 add -0.5}? 3 1 $ 4 1 $ idtransform 4 -2 $ idtransform}b/BZ{4 -2 $
snap + +S fx rf}b/rs/rectstroke , d/rc/rectclip , d/UtilsInit{currentglobal{F
setglobal}if}b/scol{! setcolor}b/colspA/DeviceGray d/colspABC/DeviceRGB d
/colspRefresh{colspABC setcolorspace}b/SetColSpace{colspABC setcolorspace}b
/resourcestatus where{!/ColorRendering/ProcSet resourcestatus{! ! T}{F}?}{F}?
not{/ColorRendering<</GetHalftoneName{currenthalftone @/HalftoneName known{
/HalftoneName get}{!/none}?}bn/GetPageDeviceName{currentpagedevice @
/PageDeviceName known{/PageDeviceName get @ null eq{!/none}if}{!/none}?}bn
/GetSubstituteCRD{!/DefaultColorRendering/ColorRendering resourcestatus{! !
/DefaultColorRendering}{(DefaultColorRendering*){cvn exit}127 string
/ColorRendering resourceforall}?}bn>>/defineresource where{!/ProcSet
defineresource !}{! !}?}if/buildcrdname{/ColorRendering/ProcSet findresource `
mark GetHalftoneName @ type @/nametype ne ~/stringtype ne and{!/none}if(.)
GetPageDeviceName @ type @/nametype ne ~/stringtype ne and{!/none}if(.)5 ^ 0 5
-1 1{^ length add}for string 6 1 $ 5 ^ 5{~ 1 ^ cvs length 1 ^ length 1 ^ sub
getinterval}repeat ! cvn 3 1 $ ! ! E}b/definecolorrendering{~ buildcrdname ~
/ColorRendering defineresource !}b/findcolorrendering where{!}{
/findcolorrendering{buildcrdname @/ColorRendering resourcestatus{! ! T}{
/ColorRendering/ProcSet findresource ` GetSubstituteCRD E F}?}b}?
/selectcolorrendering{findcolorrendering !/ColorRendering findresource
setcolorrendering}b/G2UBegin{findresource/FontInfo get/GlyphNames2Unicode get
`}bind d/G2CCBegin{findresource/FontInfo get/GlyphNames2HostCode get `}bind d
/G2UEnd{E}bind d/AddFontInfoBegin{/FontInfo 8 dict @ `}bind d/AddFontInfo{
/GlyphNames2Unicode 16 dict d/GlyphNames2HostCode 16 dict d}bind d
/AddFontInfoEnd{E d}bind d/T0AddCFFMtx2{/CIDFont findresource/Metrics2 get ` d
E}bind d
%%EndResource
end
%ADOPrintSettings: L2 W0 VM op crd OS scsa T h ef bg ucr SF EF r b fa pr seps ttf hb Printer/PostScript Color Management 0
%%BeginResource: procset l2check 6.0 1
%%Copyright: Copyright 1993,2001 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: Your printer driver needs to be configured) dup show
72 580 moveto (for printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Helvetica-Bold findfont 16 scalefont setfont
72 520 moveto (Windows and Unix) show
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (Select \252Language Level 1\272 in the PostScript options section) show
72 480 moveto (of the Acrobat print dialog.) show
/Helvetica-Bold findfont 16 scalefont setfont
72 440 moveto (Macintosh) show
/Times-Roman findfont 16 scalefont setfont
72 420 moveto (In the Chooser, select your printer driver.) show
72 400 moveto (Then select your printer and click the Setup button.) show
72 380 moveto (Follow any on-screen dialogs that may appear.) show
showpage
quit
}
if
%%EndResource
userdict /pdf_svglb currentglobal put true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.19 0
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.
%%Version: 1.19 0
systemdict /languagelevel known dup
	{ currentglobal false setglobal }
	{ false }
ifelse
exch
userdict /Adobe_CoolType_Utility 2 copy known
	{ 2 copy get dup maxlength 25 add dict copy }
	{ 25 dict }
ifelse put
Adobe_CoolType_Utility
	begin
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch /eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{ globaldict begin currentglobal true setglobal }
if
	/ct_AddStdCIDMap
		ct_Level2?
			{ {
			((Hex) 57 StartData
			0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
			7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
			d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
			cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec
			} }
			{ {
			<BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
			4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> eexec
			} }
		ifelse bind def
userdict /cid_extensions known
dup { cid_extensions /cid_UpdateDB known and } if
	 {
	 cid_extensions
	 begin
	 /cid_GetCIDSystemInfo
		 {
		 1 index type /stringtype eq
			 { exch cvn exch }
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				 {
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					 {
					 1 index load
					 3 index get
					 dup null eq
						  { pop pop cid_UpdateDB }
						  {
						  exch
						  1 index /Created get eq
							  { exch pop exch pop }
							  { pop cid_UpdateDB }
						  ifelse
						  }
					 ifelse
					 }
					 { pop cid_UpdateDB }
				 ifelse
				 }
				 { cid_UpdateDB }
			 ifelse
			 end
		 } bind def
	 end
	 }
if
ct_Level2?
	{ end setglobal }
if
	/ct_UseNativeCapability?  systemdict /composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring () def
		/usewidths? true def
		end def
	ct_Level2? { setglobal } { pop } ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict /languagelevel known
				{ pop /CIDFont findresource /GlyphDirectory get }
				{
				1 index /CIDFont findresource /GlyphDirectory
				get dup type /dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			} def
		/+
			{
			systemdict /languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{ 1 dict begin }
			ifelse
			/$ exch def
			systemdict /languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			? { $ begin } if
			} def
		/? { $ type /dicttype eq } def
		/| {
			userdict /Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data /AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					  begin
						AddWidths?
								{
								Adobe_CoolType_Data /CC 3 index put
								? { def } { $ 3 1 roll put } ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont /Widths get exch CC exch put
								}
								{ ? { def } { $ 3 1 roll put } ifelse }
							ifelse
					end
				end
				}
				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse
				}
				{ ? { def } { $ 3 1 roll put } ifelse }
			ifelse
			} def
		/!
			{
			? { end } if
			systemdict /languagelevel known
				{ gvm setglobal }
			if
			end
			} def
		/: { string currentfile exch readstring pop } executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx [.001 0 0 .001 0 0] def
		/ct_1000Mtx [1000 0 0 1000 0 0] def
		/ct_raise {exch cvx exch errordict exch get exec stop} bind def
		/ct_reraise
			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print
					errordict exch get exec stop
			} bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			} bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility /ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{ dup string /dst_string exch def }
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex  get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string  dst_index 2 index putinterval
						length dst_index add /dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string  dst_index 2 index putinterval
						pop dup dst_index add /dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							  { arrayIndex get }
							  {
							  pop
							  exit
							  }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			} bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{ /unknowninstancename /Category resourcestatus }
			stopped
				{ cleartomark setglobal true }
				{ cleartomark currentglobal not exch setglobal }
			ifelse
				{
					{
					mark 3 1 roll /Category findresource
						begin
						ct_Vars /vm currentglobal put
						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
							{ cleartomark false }
							{ { 3 2 roll pop true } { cleartomark false } ifelse }
						ifelse
						ct_Vars /vm get setglobal
						end
					}
				}
				{ { resourcestatus } }
			ifelse bind def
			/CIDFont /Category ct_resourcestatus
				{ pop pop }
				{
				currentglobal  true setglobal
				/Generic /Category findresource
				dup length dict copy
				dup /InstanceType /dicttype put
				/CIDFont exch /Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit /ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				  /Registry (Adobe) def
				  /Ordering (Identity) def
				  /Supplement 0 def
				end def
				/CMapName /Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000> <FFFF>
				endcodespacerange
				1 begincidrange
				<0000> <FFFF> 0
				endcidrange
				endcmap
				CMapName currentdict /CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont  10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{ pop pop /defineresource /undefined ct_raise }
				ifelse
				} bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{ get 3 1 roll pop pop}
						{ pop pop /findresource /undefinedresource ct_raise }
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/ct_resourcestatus /resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup (Binary) eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{ cid_BYTE_COUNT () /SubFileDecode filter }
							stopped
								{ pop pop pop }
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup (Hex) eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{ null exch /ASCIIHexDecode filter /readstring }
							stopped
								{ pop exch pop (>) exch /readhexstring }
							if
							}
							{ (>) exch /readhexstring }
						ifelse
						load
						exit
						}
					if
					/StartData /typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch /GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop /readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				} bind def
			/StartData
				{
				mark
					{
					currentdict
					dup /FDArray get 0 get /FontMatrix get
					0 get 0.001 eq
						{
						dup /CDevProc known not
							{
							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known
								{ get }
								{
								pop pop
								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }
								}
							ifelse
							def
							}
						if
						}
						{
						 /CDevProc
							 {
							 pop pop pop pop pop
							 0
							 1 cid_temp /cid_CIDFONT get
							 /FDArray get 0 get
							 /FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							 } def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup /cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup /SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup /SubrMapOffset undef
										dup /SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{ pop }
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict /CIDFont defineresource pop
					end end
					}
				stopped
					{ cleartomark /StartData ct_reraise }
				if
				} bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit /ProcSet ct_resourcestatus
				{ true }
				{ /CIDInitC /ProcSet ct_resourcestatus }
			ifelse
				{
				pop pop
				/CIDInit /ProcSet findresource
				ct_UseNativeCapability?
					{ pop null }
					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }
				ifelse
				}
				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }
			ifelse
			ct_Vars exch /ct_oldCIDInit exch put
			} bind def
		/ct_restoreCIDInit
			{
			ct_Vars /ct_oldCIDInit get dup null ne
				{ /CIDInit exch /ProcSet defineresource pop }
				{ pop }
			ifelse
			} bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility /ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{ pop 0 }
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{ get }
								{ pop pop nullstring }
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{ 0 FDBytes ct_cvnsi }
									{ pop 0 }
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{ /charstring nullstring def exit }
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			} def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			} def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont /Widths get cid
					2 copy known
						{ get exch pop aload pop }
						{ pop pop stringwidth }
					ifelse
					}
					{ stringwidth }
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			} def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{ get }
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup /FontMatrix 2 copy known
						{ get }
						{ pop pop ct_defaultFontMtx }
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont /Widths get def
					/CharStrings 1 dict dup /.notdef
						<d841272cf18f54fc13> dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup /CharStrings get 1 index /Encoding get
			ct_dfCharCode get charstring put
			rootfont /WMode 2 copy known
				{ get }
				{ pop pop 0 }
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ ct_str1 show }
			ifelse
			} def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ ct_1000Mtx matrix concatmatrix concat }
				{ pop }
			ifelse
			/Private get
			Adobe_CoolType_Utility /ct_Level2? get not
				{
				ct_dfDict /Private
				3 -1 roll
					{ put }
				1183615869 internaldict /superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility /ct_Level2? get
				{ 1 index }
				{ 3 index /Private get mark 6 1 roll }
			ifelse
			dup /RunInt known
				{ /RunInt get }
				{ pop /CCRun }
			ifelse
			get exec
			Adobe_CoolType_Utility /ct_Level2? get not
				{ cleartomark }
			if
			} bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility /ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{ stop }
			if
			end
			end
			end
			end
			} bind def
		/BaseFontNameStr (BF00) def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/BuildChar /ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString /ct_Type3ShowCharString load def
				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup /lenIV 4 put def
				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def
				/PaintType 0 def
				/ct_ShowCharString /ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{ exit }
				if
				}
			for
			exch pop exch pop
			} bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch /WMode exch def
				exch /FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup /FontMatrix known
				{ dup /FontMatrix get /FontMatrix exch def }
				{ /FontMatrix matrix def }
			ifelse
				/bfCount 1 index /CIDCount get 256 idiv 1 add
					dup 256 gt { pop 256} if def
				/Encoding
					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for
					bfCount 1 255 { 2 copy bfCount put pop } for
					def
				/FDepVector bfCount dup 256 lt { 1 add } if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont /FontBBox known
						{ CIDFont /FontBBox get /FontBBox exch def }
					if
					CIDFont /CDevProc known
						{ CIDFont /CDevProc get /CDevProc exch def }
					if
					currentdict
					end
				BaseFontNameStr 3 (0) putinterval
				0 1 bfCount dup 256 eq { 1 sub } if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup /CIDFirstByte exch 256 mul def
						FontType 3 eq
							{ /ct_FDDict 2 dict def }
						if
						currentdict
						end
					1 index  16
					BaseFontNameStr  2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont /Widths get
						begin
						exch /CIDFont get /GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{ exch pop }
			ifelse
			} bind def
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{
				2 index /CMap ct_resourcestatus
					{ pop pop exch pop }
					{
					/CIDInit /ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch /WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry (Adobe) def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-) search
									{
									pop pop
									(-) search
										{
										dup length string copy
										exch pop exch pop
										}
										{ pop (Identity)}
									ifelse
									}
									{ pop  (Identity)  }
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000> <FFFF>
							endcodespacerange
							1 begincidrange
							<0000> <FFFF> 0
							endcidrange
							endcmap
							CMapName currentdict /CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index /CMap ct_resourcestatus
					{ pop pop }
					{
					/CIDInit /ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry (Adobe) def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-) search
							{
							pop pop
							(-) search
								{ dup length string copy exch pop exch pop }
								{ pop (Identity) }
							ifelse
							}
							{ pop (Identity) }
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000> <FFFF>
					endcodespacerange
					1 begincidrange
					<0000> <FFFF> 0
					endcidrange
					endcmap
					CMapName currentdict /CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		currentdict readonly pop
		end
	end
%%EndResource

userdict /pdf_svglb get setglobal
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset pdflev2 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/undefineRes/undefineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
cvi
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[userdict /pdf_svglb currentglobal put true setglobal
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end

userdict /pdf_svglb get setglobal
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_PS} /type /stream /OBJ PDFMark5
[{Metadata_In_PS} 1252 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<?adobe-xap-filters esc="CRLF"?>
<x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 2.9.1-14, framework 1.6'>
<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>
<rdf:Description rdf:about='uuid:052be1e4-7149-4b35-b617-ebc63deadfaa' xmlns:pdf='http://ns.adobe.com/pdf/1.3/' pdf:Producer='Acrobat Distiller 6.0.1 (Windows)'></rdf:Description>
<rdf:Description rdf:about='uuid:052be1e4-7149-4b35-b617-ebc63deadfaa' xmlns:xap='http://ns.adobe.com/xap/1.0/' xap:CreatorTool='PScript5.dll Version 5.2.2' xap:ModifyDate='2010-02-23T16:26:52+08:00' xap:CreateDate='2008-10-24T13:44:25+08:00' xap:MetadataDate='2010-02-23T16:26:52+08:00'></rdf:Description>
<rdf:Description rdf:about='uuid:052be1e4-7149-4b35-b617-ebc63deadfaa' xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/' xapMM:DocumentID='uuid:8d9ef2fd-1f64-477d-ac93-d68530ab5f8c'/>
<rdf:Description rdf:about='uuid:052be1e4-7149-4b35-b617-ebc63deadfaa' xmlns:dc='http://purl.org/dc/elements/1.1/' dc:format='application/pdf'><dc:title><rdf:Alt><rdf:li xml:lang='x-default'>Microsoft Word - BMD.doc</rdf:li></rdf:Alt></dc:title><dc:creator><rdf:Seq><rdf:li>xysong</rdf:li></rdf:Seq></dc:creator></rdf:Description>
</rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Metadata_In_PS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[{Catalog} {Metadata_In_PS} /Metadata PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end
%%EndProlog

%%BeginSetup
Pscript_WinNT_Min dup /min_initialize get exec
featurebegin{
%%BeginNonPPDFeature: JobTimeout 0
0 /languagelevel where{pop languagelevel}{1}ifelse 2 ge{1 dict dup/JobTimeout  4 -1 roll put setuserparams}{statusdict/setjobtimeout get exec}ifelse
%%EndNonPPDFeature
}featurecleanup

featurebegin{
%%BeginNonPPDFeature: WaitTimeout 300
300 /languagelevel where{pop languagelevel}{1}ifelse 2 ge{1 dict dup/WaitTimeout 4 -1 roll put setuserparams}{statusdict/waittimeout 3 -1 roll put}ifelse
%%EndNonPPDFeature
}featurecleanup

featurebegin{
%%BeginFeature: *TraySwitch False
1 dict dup /TraySwitch false put setpagedevice
%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *OutputMode Normal

   1 dict dup /PostRenderingEnhanceDetails 
      2 dict dup /Type 19 put dup /OutputMode /Normal put put
   setpagedevice 
%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *PageSize A4

    2 dict dup /PageSize [595 842] put dup /ImagingBBox null put setpagedevice
%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *MediaType Plain

	2 dict
		dup /MediaType (Plain) put
		dup /InputAttributes mark
			currentpagedevice /InputAttributes get
			{
				dup type /dicttype eq {
					dup length 1 add dict begin {def} forall
					/MediaType (Plain) def
					currentdict end
				} if
			} forall
			counttomark 2 idiv dup dict begin {def} repeat
			pop currentdict end
		put
	setpagedevice

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *OutputBin OnlyOne

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *InstalledMemory 16Meg

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *OptionalCassette1 False

%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *Resolution 600dpi

%%EndFeature
}featurecleanup
1 setlinecap 1 setlinejoin
/mysetup [ 72 72 V 0 0 72 72 V 0 0 ] def 
%%EndSetup

userdict begin /ehsave save def end
%%Page: 1 1
%%PageBoundingBox: 15 15 582 819
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

%%BeginDocument: Pscript_Win_PassThrough
%%DocumentProcessColors: (atend)
 PDF /docinitialize get exec
PDFVars begin PDF begin PDFVars/InitAll get exec
save
12.0 14.0 582.0 828.0 111.903229 129.760117 512.903198 673.760132 1 270 false true false false PDF begin PDFVars begin ASR end end
/N13 [/CIEBasedABC 20 dict
dup /CreationDate (19980209064900) put
dup /RenderingIntent (RelativeColorimetric) put
dup /Description (sRGB IEC61966-2.1) put
dup /ColorSpace (RGB ) put
dup /Copyright (Copyright (c) 1998 Hewlett-Packard Company) put
dup /ProfileID <1D3FDA2EDB4A89AB60A23C5F7C7D81DD> put
dup /DecodeABC [
{{0 0.00031 0.00061 0.0009 0.0012 0.00151 0.00181 0.00212 0.00242 0.00271
0.00302 0.00334 0.00366 0.00401 0.00437 0.00476 0.00515 0.00558 0.00602 0.00648
0.00696 0.00745 0.00798 0.00852 0.00908 0.00966 0.01027 0.01089 0.01153 0.0122
0.0129 0.01362 0.01435 0.01511 0.01589 0.0167 0.01752 0.01837 0.01925 0.02015
0.02107 0.02203 0.02299 0.02399 0.02501 0.02606 0.02713 0.02822 0.02934 0.03049
0.03166 0.03287 0.03409 0.03533 0.03662 0.03792 0.03925 0.04061 0.04199 0.04341
0.04484 0.04631 0.04781 0.04933 0.05088 0.05245 0.05406 0.05569 0.05736 0.05904
0.06077 0.06252 0.0643 0.06611 0.06794 0.06981 0.0717 0.07363 0.07558 0.07756
0.07959 0.08162 0.0837 0.08581 0.08795 0.09011 0.09231 0.09454 0.0968 0.09909
0.10142 0.10376 0.10616 0.10857 0.11102 0.11351 0.11602 0.11856 0.12114 0.12376
0.12639 0.12907 0.13178 0.13452 0.13729 0.14009 0.14294 0.14581 0.14873 0.15166
0.15463 0.15765 0.16068 0.16376 0.16687 0.17001 0.17319 0.17641 0.17965 0.18293
0.18625 0.1896 0.19299 0.19641 0.19987 0.20335 0.20688 0.21045 0.21405 0.21767
0.22134 0.22505 0.22879 0.23257 0.23638 0.24023 0.24411 0.24804 0.25199 0.25599
0.26002 0.26409 0.2682 0.27234 0.27651 0.28073 0.28499 0.28928 0.29361 0.29798
0.30238 0.30683 0.3113 0.31582 0.32038 0.32497 0.3296 0.33428 0.33898 0.34372
0.34851 0.35333 0.3582 0.3631 0.36804 0.37302 0.37804 0.3831 0.38819 0.39333
0.3985 0.40372 0.40898 0.41427 0.41961 0.42498 0.43039 0.43585 0.44134 0.44688
0.45245 0.45806 0.46372 0.46942 0.47516 0.48094 0.48675 0.49261 0.49851 0.50445
0.51043 0.51646 0.52253 0.52863 0.53477 0.54097 0.54719 0.55347 0.55979 0.56613
0.57253 0.57897 0.58545 0.59198 0.59855 0.60515 0.6118 0.61849 0.62524 0.63201
0.63884 0.6457 0.6526 0.65955 0.66654 0.67357 0.68066 0.68778 0.69495 0.70215
0.7094 0.71669 0.72404 0.73142 0.73885 0.74632 0.75383 0.76138 0.76899 0.77663
0.78433 0.79206 0.79983 0.80765 0.81552 0.82343 0.83139 0.8394 0.84744 0.85554
0.86367 0.87185 0.88007 0.88835 0.89666 0.90503 0.91343 0.92189 0.93038 0.93892
0.94751 0.95614 0.96482 0.97355 0.98232 0.99114 1}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
dup
dup
] put
dup /MatrixABC [
0.2180189128 0.1112492942 0.0069565698
0.1925612492 0.358452993 0.0485281768
0.0715286348 0.0303053423 0.3569742448
] put
dup /MatrixLMN [1.9999694824 0 0 0 1.9999694824 0 0 0 1.9999694824] put
dup /BlackPoint [0 0 0] put
dup /WhitePoint [0.9642028809 1 0.8249053955] put]
/ColorSpace defineRes pop

111.903229 129.760117 400.999969 544.000015 re
W
n
n
296.820007 502.379974 25.26001 45.120026 re
[/CIEBasedABC 20 dict
dup /CreationDate (19980209064900) put
dup /RenderingIntent (RelativeColorimetric) put
dup /Description (sRGB IEC61966-2.1) put
dup /ColorSpace (RGB ) put
dup /Copyright (Copyright (c) 1998 Hewlett-Packard Company) put
dup /ProfileID <1D3FDA2EDB4A89AB60A23C5F7C7D81DD> put
dup /DecodeABC [
{{0 0.00031 0.00061 0.0009 0.0012 0.00151 0.00181 0.00212 0.00242 0.00271
0.00302 0.00334 0.00366 0.00401 0.00437 0.00476 0.00515 0.00558 0.00602 0.00648
0.00696 0.00745 0.00798 0.00852 0.00908 0.00966 0.01027 0.01089 0.01153 0.0122
0.0129 0.01362 0.01435 0.01511 0.01589 0.0167 0.01752 0.01837 0.01925 0.02015
0.02107 0.02203 0.02299 0.02399 0.02501 0.02606 0.02713 0.02822 0.02934 0.03049
0.03166 0.03287 0.03409 0.03533 0.03662 0.03792 0.03925 0.04061 0.04199 0.04341
0.04484 0.04631 0.04781 0.04933 0.05088 0.05245 0.05406 0.05569 0.05736 0.05904
0.06077 0.06252 0.0643 0.06611 0.06794 0.06981 0.0717 0.07363 0.07558 0.07756
0.07959 0.08162 0.0837 0.08581 0.08795 0.09011 0.09231 0.09454 0.0968 0.09909
0.10142 0.10376 0.10616 0.10857 0.11102 0.11351 0.11602 0.11856 0.12114 0.12376
0.12639 0.12907 0.13178 0.13452 0.13729 0.14009 0.14294 0.14581 0.14873 0.15166
0.15463 0.15765 0.16068 0.16376 0.16687 0.17001 0.17319 0.17641 0.17965 0.18293
0.18625 0.1896 0.19299 0.19641 0.19987 0.20335 0.20688 0.21045 0.21405 0.21767
0.22134 0.22505 0.22879 0.23257 0.23638 0.24023 0.24411 0.24804 0.25199 0.25599
0.26002 0.26409 0.2682 0.27234 0.27651 0.28073 0.28499 0.28928 0.29361 0.29798
0.30238 0.30683 0.3113 0.31582 0.32038 0.32497 0.3296 0.33428 0.33898 0.34372
0.34851 0.35333 0.3582 0.3631 0.36804 0.37302 0.37804 0.3831 0.38819 0.39333
0.3985 0.40372 0.40898 0.41427 0.41961 0.42498 0.43039 0.43585 0.44134 0.44688
0.45245 0.45806 0.46372 0.46942 0.47516 0.48094 0.48675 0.49261 0.49851 0.50445
0.51043 0.51646 0.52253 0.52863 0.53477 0.54097 0.54719 0.55347 0.55979 0.56613
0.57253 0.57897 0.58545 0.59198 0.59855 0.60515 0.6118 0.61849 0.62524 0.63201
0.63884 0.6457 0.6526 0.65955 0.66654 0.67357 0.68066 0.68778 0.69495 0.70215
0.7094 0.71669 0.72404 0.73142 0.73885 0.74632 0.75383 0.76138 0.76899 0.77663
0.78433 0.79206 0.79983 0.80765 0.81552 0.82343 0.83139 0.8394 0.84744 0.85554
0.86367 0.87185 0.88007 0.88835 0.89666 0.90503 0.91343 0.92189 0.93038 0.93892
0.94751 0.95614 0.96482 0.97355 0.98232 0.99114 1}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
dup
dup
] put
dup /MatrixABC [
0.2180189128 0.1112492942 0.0069565698
0.1925612492 0.358452993 0.0485281768
0.0715286348 0.0303053423 0.3569742448
] put
dup /MatrixLMN [1.9999694824 0 0 0 1.9999694824 0 0 0 1.9999694824] put
dup /BlackPoint [0 0 0] put
dup /WhitePoint [0.9642028809 1 0.8249053955] put]
/E1 exch /ColorSpace defineRes

cs 1.0 1.0 1.0 sc
f
1 J
0.706 w
8.0 M
n
296.820007 502.379974 25.320007 45.120026 re
S
[/DeviceGray] cs 0.0 sc
userdict /pdf_svglb currentglobal put true setglobal
%ADOBeginSubsetFont: COBNBD+TimesNewRomanPSMT-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (COBNBD+TimesNewRomanPSMT)
%%Title: (COBNBD+TimesNewRomanPSMT Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /COBNBD+TimesNewRomanPSMT def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-568 -307 2000 1007} def
/FontInfo 4 dict dup begin
/FSType 0 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 1674 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 1 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B6FF86FBD66B095379F45880CA28D0F0C4629F99B72EFEDBB
222483BD74F8B> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /COBNBD+TimesNewRomanPSMT-Identity-H /Identity-H 0 [/COBNBD+TimesNewRomanPSMT] ct_ComposeFont pop end end
%ADOEndSubsetFont

userdict /pdf_svglb get setglobal
%PDF_BeginEncoding: N11 (COBNBD+TimesNewRomanPSMT-Identity-H)
/N11 (COBNBD+TimesNewRomanPSMT-Identity-H) /Identity-H [ (COBNBD+TimesNewRomanPSMT) ]
 /Adobe-Identity [ /Serif ] 0 TZzero
311.100006 509.579987 m
%ADOBeginSubsetFont: COBNBD+TimesNewRomanPSMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
/COBNBD+TimesNewRomanPSMT 1 GetGlyphDirectory
534 <001C60D8A8C9B761B29A62C94858E92434D39FF7E2BF5E2CCF988FCD716
00619E099242CBC2971E0B61006AFAFA10B090BBD597592779925D90A40AC3A2
8D7DABE5A801A816D43040DF9867528CEABE9C63AC4659CB72DECBF5C36708BC
659D6> |
!
end
end end
%ADOEndSubsetFont
/N11 [0.0 11.289795 -11.289795 0.0 0.0 0.0] Tf
(\002\026) show
userdict /pdf_svglb currentglobal put true setglobal
%ADOBeginSubsetFont: COBNCE+TimesNewRomanPSMT Initial
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /COBNCE+TimesNewRomanPSMT def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/FontBBox {0 0 0 0} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B6FF86FBD66B095379F45880CA28D0F0C4629F99B72E
FEDBB222483BD74F8B> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont

userdict /pdf_svglb get setglobal
[/N12/COBNCE+TimesNewRomanPSMT 1 TZG
312.539978 514.559998 m
%ADOBeginSubsetFont: COBNCE+TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
/COBNCE+TimesNewRomanPSMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/nine <1C60D8A8C9B7A73D92CE6A66BA49C70A16072730ADF99EB50B81EC870
A54394DDFE38FABEC18FB7B826889153F28664691169009324BD4E9661571BB9
1EC6E47B44C4894E182CDFFE1F715113C62DB236897358730FEA1D138847386A
CC90D129A1077A70DC9DAEA483EA5552EB360DE0397958942F0F1C3FE8C7E6CD
3CF99FAB1F16B30CA1A210BFF9DDE43DE5ED76615C174EEED6DAB9E5A77B1C62
FBE9CABC1B3A46D497C4D6EFFC96F4CC02C8A01382FD55BD7B4> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/COBNCE+TimesNewRomanPSMT findfont /Encoding get
dup 57 /nine put
pop
%ADOEndSubsetFont
/N12 [0.0 7.507706 -7.507706 0.0 0.0 0.0] Tf
(9) show
n
271.380005 462.899994 25.440002 45.059998 re
/E1 /ColorSpace findRes cs 1.0 1.0 1.0 sc
f
n
271.380005 462.899994 25.440002 45.059998 re
S
[/DeviceGray] cs 0.0 sc
285.660004 470.039978 m
/N11 [0.0 11.289795 -11.289795 0.0 0.0 0.0] Tf
(\002\026) show
287.040009 475.019989 m
%ADOBeginSubsetFont: COBNCE+TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
/COBNCE+TimesNewRomanPSMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/eight <1C60D8A8C9B7A73DAB2BA6B835CAFB4C9A41096F555C470FE6294A70
7AE711C017C95446B200870C2B6A47FB931BCEBEB5BBC6B53605850C75701306
FD83F9DC906687C2B3A2C9C0DB9DB68E95D3478DEA01153491C8534F5AD89998
0F04C195BFB522EDEF282420AA1F12E08397ECA941D5934294BD451B3952E622
9D3E7987DD36FC8E43559904E0205D3416EDD1402AB05184D2018B2C7B816330
FD0C2740A24C74F80E34F93317BBB1D6B8C4D916C15B7FF1D533D7762324A101
7022A27246D93B9768262BFCC673CAD6781894C98679A5889F9338F377D1995A
EDF5695FBA7A65628522691535557B2045419DD63F87D7A64B6A962B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/COBNCE+TimesNewRomanPSMT findfont /Encoding get
dup 56 /eight put
pop
%ADOEndSubsetFont
/N12 [0.0 7.507706 -7.507706 0.0 0.0 0.0] Tf
(8) show
n
381.47998 378.119995 25.380005 45.179993 re
/E1 /ColorSpace findRes cs 1.0 1.0 1.0 sc
f
n
381.47998 378.179993 25.380005 45.119995 re
S
[/DeviceGray] cs 0.0 sc
395.759979 385.319977 m
/N11 [0.0 11.289795 -11.289795 0.0 0.0 0.0] Tf
(\002\026) show
397.200012 390.300018 m
%ADOBeginSubsetFont: COBNCE+TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
/COBNCE+TimesNewRomanPSMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/seven <1C60D8A8C9B7A73DFE31854B8CA51F015562FECC80A8475F282F7722
52E10D05B7D43981266F60616595AB1BFBC47BFB03D1BE> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/COBNCE+TimesNewRomanPSMT findfont /Encoding get
dup 55 /seven put
pop
%ADOEndSubsetFont
/N12 [0.0 7.507706 -7.507706 0.0 0.0 0.0] Tf
(7) show
n
322.200012 383.819977 25.440002 45.179993 re
/E1 /ColorSpace findRes cs 1.0 1.0 1.0 sc
f
n
322.200012 383.819977 25.440002 45.179993 re
S
[/DeviceGray] cs 0.0 sc
336.47998 391.019989 m
/N11 [0.0 11.289795 -11.289795 0.0 0.0 0.0] Tf
(\002\026) show
337.919983 396.0 m
%ADOBeginSubsetFont: COBNCE+TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
/COBNCE+TimesNewRomanPSMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/six <1C60D8A8C9B7A73DB682174C160AB8115D90A4524BD5B352C23110F23E
E4E20266716093AE0643A076F6C57BA527F49BB819243E28C4CA7F711F41FA01
318856C15674E51D546E83D25FE9DB7A4B9EDFDDE57E488CC507C2304526D6E8
0E07D1EEFCA86373B2F664DD3DA4646061C700F112AB44ED3896FA596FE81443
6AD1F1DC5FEDB207A575A17735F66E79BF0D0E423C92F1E9255D38F15B49459F
3693E95DCE92EBF25C243713EDA9138A49C42AA83683249878EEA825672AC6D9
9C32B9109B3D5797A7> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/COBNCE+TimesNewRomanPSMT findfont /Encoding get
dup 54 /six put
pop
%ADOEndSubsetFont
/N12 [0.0 7.507706 -7.507706 0.0 0.0 0.0] Tf
(6) show
n
296.820007 248.339996 25.380005 45.119995 re
/E1 /ColorSpace findRes cs 1.0 1.0 1.0 sc
f
n
296.820007 248.339996 25.380005 45.119995 re
S
[/DeviceGray] cs 0.0 sc
311.100006 255.479996 m
/N11 [0.0 11.289795 -11.289795 0.0 0.0 0.0] Tf
(\002\026) show
312.539978 260.459991 m
%ADOBeginSubsetFont: COBNCE+TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
/COBNCE+TimesNewRomanPSMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/five <1C60D8A8C9B7A73DB97C1FD4849B14157B765BEEE66B9438731A1E1DB
F6D904609867EBF49E3E19DC6BA786F7382AB36C8CFA3690DF4F8E7A258691DF
DD71792965BBA1DCE407BE309901C1513A762BED3C73A852D4EDA1BE20A2B364
C59E2224D36D9C8BEE5DE8D6C54C49D0F66DB7448A8FCE0E63D5DEE7BBBA026A
808CDA9AD5556005639017FF42B963FB833B4B64B6445B350600BDCDD563F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/COBNCE+TimesNewRomanPSMT findfont /Encoding get
dup 53 /five put
pop
%ADOEndSubsetFont
/N12 [0.0 7.507706 -7.507706 0.0 0.0 0.0] Tf
(5) show
n
262.859985 406.380005 25.679993 45.23999 re
/E1 /ColorSpace findRes cs 1.0 1.0 1.0 sc
f
n
262.919983 406.380005 25.619995 45.23999 re
S
[/DeviceGray] cs 0.0 sc
277.200012 413.579987 m
/N11 [0.0 11.289795 -11.289795 0.0 0.0 0.0] Tf
(\002\026) show
278.579987 418.5 m
%ADOBeginSubsetFont: COBNCE+TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
/COBNCE+TimesNewRomanPSMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/four <1C60D8A8C9B7A73DB6B62B7A95EE6C20B94EAC94CA9AB50BFD020369D
6A63C8EA15A0D9A89B2ED9293078F8D3EE629592E255C65B246> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/COBNCE+TimesNewRomanPSMT findfont /Encoding get
dup 52 /four put
pop
%ADOEndSubsetFont
/N12 [0.0 7.507706 -7.507706 0.0 0.0 0.0] Tf
(4) show
n
212.159988 451.5 25.440002 45.359985 re
/E1 /ColorSpace findRes cs 1.0 1.0 1.0 sc
f
n
212.159988 451.559998 25.440002 45.299988 re
S
[/DeviceGray] cs 0.0 sc
226.440002 458.700012 m
/N11 [0.0 11.289795 -11.289795 0.0 0.0 0.0] Tf
(\002\026) show
227.819992 463.679993 m
%ADOBeginSubsetFont: COBNCE+TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
/COBNCE+TimesNewRomanPSMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/three <1C60D8A8C9B7A73D83638F79AE86E17D4CE334FAA90E146D21CDA0FE
B71815E9499D6C6A6E581E78F34038D792771470EBF894DABD777E9B4FDE68E7
E1544BCF1EFB2DCE59357B716B4D2ADF3EAC3A9FF8BD07EC79AF5536B9B74185
F8F7489AD909079119E88D2BB755D6F6AC02C01BDFADB347EC55DAC49C8BB047
661CC7AAA3BDC1DB8E01EC56137B53ED31B24F4502353853D049BB0515CA4217
D33D10484933F30AD1EAA43CFDF00AFA5462EE9B1772CE60A3392B8D9C1A3598
CF2273E36A1FF3A58B2E24B1EACE5E34650257902678998DAAFF235764CCCA14
3A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/COBNCE+TimesNewRomanPSMT findfont /Encoding get
dup 51 /three put
pop
%ADOEndSubsetFont
/N12 [0.0 7.507706 -7.507706 0.0 0.0 0.0] Tf
(3) show
n
262.859985 355.619995 25.679993 45.179993 re
/E1 /ColorSpace findRes cs 1.0 1.0 1.0 sc
f
n
262.919983 355.619995 25.619995 45.179993 re
S
[/DeviceGray] cs 0.0 sc
277.200012 362.819977 m
/N11 [0.0 11.289795 -11.289795 0.0 0.0 0.0] Tf
(\002\026) show
278.579987 367.800018 m
%ADOBeginSubsetFont: COBNCE+TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
/COBNCE+TimesNewRomanPSMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/two <1C60D8A8C9B7A73DB6F198797B24E7DF20E340C763AB9A17095FFDDA6B
4B0E4D4AC4BE83AF302018AACAF29AB5FCEB98A93FCCD2C9A968B7CB1B433E25
003CA8A63287F6BD1729C8188A209A7171C9BFB11D2FACEF2FADF63141D976A0
F90EDDE709834FFBF963952A5213F1DDF75DF2C0C4ABBF998F7E8BA2741402DB
7F4B6E4BDAD8DEBF530764A38FF9AF0505> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/COBNCE+TimesNewRomanPSMT findfont /Encoding get
dup 50 /two put
pop
%ADOEndSubsetFont
/N12 [0.0 7.507706 -7.507706 0.0 0.0 0.0] Tf
(2) show
n
212.159988 310.440002 25.440002 45.299988 re
/E1 /ColorSpace findRes cs 1.0 1.0 1.0 sc
f
n
212.159988 310.440002 25.440002 45.299988 re
S
[/DeviceGray] cs 0.0 sc
226.440002 317.639984 m
/N11 [0.0 11.289795 -11.289795 0.0 0.0 0.0] Tf
(\002\026) show
227.819992 322.619995 m
%ADOBeginSubsetFont: COBNCE+TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
/COBNCE+TimesNewRomanPSMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/one <1C60D8A8C9B7A73DB92A3F8C4B412A6756A4F8D8439622AB29A83C93F5
89D112DBEAB54F9ACF0D9BFA06C28638F8F8CA9EE7AFD734575522301B5C0272
0FA00A934493EC3D856AF45EEE1D7462FF2375B7250579D34D9C249B6BEBF8EF
41DB28C0847307B8DCBC66> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/COBNCE+TimesNewRomanPSMT findfont /Encoding get
dup 49 /one put
pop
%ADOEndSubsetFont
/N12 [0.0 7.507706 -7.507706 0.0 0.0 0.0] Tf
(1) show
n
432.359985 553.200012 25.26001 45.23999 re
/E1 /ColorSpace findRes cs 1.0 1.0 1.0 sc
f
n
432.359985 553.200012 25.26001 45.23999 re
S
[/DeviceGray] cs 0.0 sc
444.899994 560.400024 m
%ADOBeginSubsetFont: COBNBD+TimesNewRomanPSMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
/COBNBD+TimesNewRomanPSMT 1 GetGlyphDirectory
540 <001C60D8A8C9B756EDA5D77568A0FA18386A6AD49BD8704311ACC8EC594
A8E55D853B735863EADAE5174B8F61AF42D1EBFEF18D11F56095D56D220F8853
BB59C9C6F118D0506F2F12650503C7A1EE01EE772A9E0562047AA435C0F6D680
1DF0973002B18758FDB64745C73DF334FB7B085B8917A2872C70168A2153CA76
CA35980C5485892B4BECBD288F8C11406F3A514A30E53289C742E> |
!
end
end end
%ADOEndSubsetFont
/N11 [0.0 9.427002 -9.427002 0.0 0.0 0.0] Tf
(\002\034) show
446.279999 564.959961 m
%ADOBeginSubsetFont: COBNCE+TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
/COBNCE+TimesNewRomanPSMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/comma <1C60D8A8C9B8707CDCEBD9C789FC719A6E699B9D99F66BE737EEBAFF
7111B9225F270084B7F68BC0DDECBD8A23968AE48D16B628A165111DDE7E6CD8
DD6007F82AE5C9057E54AF2D17F8AB7C9B11610F20000D2C65AB75461D35EBD1
19C9E1C1E902BC7C231A59B4A0E3A4C206C50EEA0EE1> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/COBNCE+TimesNewRomanPSMT findfont /Encoding get
dup 44 /comma put
pop
%ADOEndSubsetFont
/N12 [0.0 6.096497 -6.096497 0.0 0.0 0.0] Tf
(15,5)
[3.064709 3.064709 1.540585 3.064709 ] pdfys
n
432.359985 502.379974 25.26001 45.240021 re
/E1 /ColorSpace findRes cs 1.0 1.0 1.0 sc
f
n
432.359985 502.379974 25.26001 45.240021 re
S
[/DeviceGray] cs 0.0 sc
444.899994 509.579987 m
/N11 [0.0 9.427002 -9.427002 0.0 0.0 0.0] Tf
(\002\034) show
446.279999 514.140015 m
/N12 [0.0 6.096497 -6.096497 0.0 0.0 0.0] Tf
(14,5)
[3.064709 3.064709 1.540585 3.064709 ] pdfys
n
262.859985 570.119995 25.5 45.419983 re
/E1 /ColorSpace findRes cs 1.0 1.0 1.0 sc
f
n
262.919983 570.119995 25.440002 45.419983 re
S
[/DeviceGray] cs 0.0 sc
275.399994 577.319885 m
/N11 [0.0 9.427002 -9.427002 0.0 0.0 0.0] Tf
(\002\034) show
276.839996 581.880005 m
/N12 [0.0 6.096497 -6.096497 0.0 0.0 0.0] Tf
(12,4)
[3.064709 3.064709 1.540585 3.064709 ] pdfys
n
237.600006 575.820007 25.26001 45.299988 re
/E1 /ColorSpace findRes cs 1.0 1.0 1.0 sc
f
n
237.600006 575.820007 25.320007 45.23999 re
S
[/DeviceGray] cs 0.0 sc
250.139999 582.959961 m
/N11 [0.0 9.427002 -9.427002 0.0 0.0 0.0] Tf
(\002\034) show
251.519989 587.519958 m
/N12 [0.0 6.096497 -6.096497 0.0 0.0 0.0] Tf
(11,4)
[3.064709 3.064709 1.540585 3.064709 ] pdfys
n
212.159988 581.339966 25.440002 39.659973 re
/E1 /ColorSpace findRes cs 1.0 1.0 1.0 sc
f
n
212.159988 581.339966 25.440002 39.659973 re
S
[/DeviceGray] cs 0.0 sc
224.699997 588.539978 m
/N11 [0.0 9.427002 -9.427002 0.0 0.0 0.0] Tf
(\002\034) show
226.080002 593.100037 m
%ADOBeginSubsetFont: COBNCE+TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
/COBNCE+TimesNewRomanPSMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/zero <1C60D8A8C9B7A73DAAFDCA97EBBC8D8E35A41D9404C5638B059E1CA50
B5366543C3D584AD9E19987218AC5999BB0F2477597AB6F8DD868788C8440CBF
4A338EF64ACD9BF2268656755741DB71FD86387D4A7AA1CFD19937BFD209E4FB
CD1952717C8CF8C0555CB2D0238DC43B2A6A2DE4D7366DB210D2673870D0B0C5
8344E6AEF91B916BAAEAEF37B22F065E870AFE6638E56D0B4AE01785D59EE234
02242D396440157FC51> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/COBNCE+TimesNewRomanPSMT findfont /Encoding get
dup 48 /zero put
pop
%ADOEndSubsetFont
/N12 [0.0 6.096497 -6.096497 0.0 0.0 0.0] Tf
(10,4)
[3.064709 3.064709 1.540585 3.064709 ] pdfys
n
432.359985 310.440002 25.26001 45.299988 re
/E1 /ColorSpace findRes cs 1.0 1.0 1.0 sc
f
n
432.359985 310.440002 25.26001 45.299988 re
S
[/DeviceGray] cs 0.0 sc
444.899994 317.639984 m
/N11 [0.0 9.427002 -9.427002 0.0 0.0 0.0] Tf
(\002\034) show
446.279999 322.200012 m
/N12 [0.0 6.096497 -6.096497 0.0 0.0 0.0] Tf
(83)
[3.059832 3.059832 ] pdfys
n
432.359985 259.73999 25.26001 45.299988 re
/E1 /ColorSpace findRes cs 1.0 1.0 1.0 sc
f
n
432.359985 259.679993 25.26001 45.359985 re
S
[/DeviceGray] cs 0.0 sc
444.899994 266.820007 m
/N11 [0.0 9.427002 -9.427002 0.0 0.0 0.0] Tf
(\002\034) show
446.279999 271.440002 m
%ADOBeginSubsetFont: COBNCE+TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
/COBNCE+TimesNewRomanPSMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B8707C25> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/COBNCE+TimesNewRomanPSMT findfont /Encoding get
dup 32 /space put
pop
%ADOEndSubsetFont
/N12 [0.0 6.096497 -6.096497 0.0 0.0 0.0] Tf
(73 )
[3.000086 3.059832 1.475962 ] pdfys
n
262.859985 203.279999 25.5 45.059998 re
/E1 /ColorSpace findRes cs 1.0 1.0 1.0 sc
f
n
262.919983 203.279999 25.440002 45.059998 re
S
[/DeviceGray] cs 0.0 sc
275.399994 210.419998 m
/N11 [0.0 9.427002 -9.427002 0.0 0.0 0.0] Tf
(\002\034) show
276.839996 214.979996 m
/N12 [0.0 6.096497 -6.096497 0.0 0.0 0.0] Tf
(52 )
[3.059832 3.000086 1.535707 ] pdfys
n
169.73999 423.300018 17.160004 45.299988 re
/E1 /ColorSpace findRes cs 1.0 1.0 1.0 sc
f
n
169.73999 423.300018 17.160004 45.299988 re
S
[/DeviceGray] cs 0.0 sc
182.159988 430.5 m
/N11 [0.0 9.427002 -9.427002 0.0 0.0 0.0] Tf
(\002\034) show
q
n
178.139999 435.059998 4.979996 6.119995 re
W
n
183.600006 435.059998 m
/N12 [0.0 6.096497 -6.096497 0.0 0.0 0.0] Tf
(21)
[3.059832 3.059832 ] pdfys
Q
n
229.080002 191.87999 33.779984 45.240005 re
/E1 /ColorSpace findRes cs 1.0 1.0 1.0 sc
f
n
229.080002 191.87999 33.840012 45.240005 re
S
[/DeviceGray] cs 0.0 sc
241.619995 199.019989 m
(\002\034) show
243.0 203.639999 m
/N12 [0.0 6.096497 -6.096497 0.0 0.0 0.0] Tf
(42 )
[3.000086 3.059832 1.475962 ] pdfys
n
195.179993 203.279999 16.979996 45.119995 re
/E1 /ColorSpace findRes cs 1.0 1.0 1.0 sc
f
n
195.179993 203.279999 16.979996 45.119995 re
S
[/DeviceGray] cs 0.0 sc
207.659988 210.419998 m
%ADOBeginSubsetFont: COBNCE+TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
/COBNCE+TimesNewRomanPSMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/period <1C60D8A8C9B8707CC95A9B5DFDE3A4AF8C8BB7D0C82C30C322ED949
85BC6C2F162CD480F8280AD954FE8DC511B40B423DB4A6012D9C419E4DF4F375
C6ADD098717CA70F621> |-
/asterisk <1C60D8A8C9B7A73DB96A9BE325337B8647A5F92D9535B9CCA3F2B
39E3FE90B4926D158BB08B5DA27BB7B33D496E246C984356E755F274E002B187
ACFD7CAD61D295814ACCA20DB9B5039B53889A9A269E72856000CB6F300D3702
6CC2FDA550BB7A4C3EE05F1E578B6551CF3B8E68E26BE34623F0FFCB256FD8EC
BC01491DEB2A89F680A68DA63354A2690BF02253F527DAFBB6F4C769FD4167A3
480B08AA8603FBF1321D2375F3DE54F08424D46CFD0BF62E5981BDDC09693BE1
8DA30116251B159CDA0B3AACF027387A1F9AC0CAD3F7A57270F6ECC251EBDA2F
E9DFC4DB42773DA6C22C8519DB30006F2D45E53F8489DFB3E281D9274A1165C0
576641AADE66E5BFEB0D1D910AADC4710C5868B4202994974F613DF5CC5BEAC7
4DD098FA5E298BCC33CEAEF940DB2A79E38BD96EBAD7AFBF2FF17D5B85945379
4E0A6CD25D0D6C1D86757CD0FF60D610B8A62627708A2ADA6E1488C9BB132F3A
0694E5489BB7C2F51B9EB650F23B514FF2078> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/COBNCE+TimesNewRomanPSMT findfont /Encoding get
dup 46 /period put
dup 42 /asterisk put
pop
%ADOEndSubsetFont
/N12 [0.0 9.427002 -9.427002 0.0 0.0 0.0] Tf
(1.0* )
[4.739896 2.280392 4.739896 4.739896 2.383146 ] pdfys
n
169.73999 338.700012 16.979996 45.119995 re
/E1 /ColorSpace findRes cs 1.0 1.0 1.0 sc
f
n
169.73999 338.700012 16.979996 45.119995 re
S
[/DeviceGray] cs 0.0 sc
182.159988 345.899994 m
(1.0*)
[4.739896 2.280392 4.739896 4.739896 ] pdfys
n
432.359985 445.97998 16.920013 45.299988 re
/E1 /ColorSpace findRes cs 1.0 1.0 1.0 sc
f
n
432.359985 445.97998 16.920013 45.23999 re
S
[/DeviceGray] cs 0.0 sc
444.779999 453.119995 m
(1.0*)
[4.731412 2.374662 4.731412 4.731412 ] pdfys
n
178.199997 570.119995 17.100006 45.179993 re
/E1 /ColorSpace findRes cs 1.0 1.0 1.0 sc
f
n
178.199997 570.119995 17.100006 45.179993 re
S
[/DeviceGray] cs 0.0 sc
190.619995 577.319885 m
(1.0*)
[4.729527 2.372777 4.729527 4.729527 ] pdfys
n
432.359985 220.080002 16.920013 45.180008 re
/E1 /ColorSpace findRes cs 1.0 1.0 1.0 sc
f
n
432.359985 220.080002 16.920013 45.180008 re
S
[/DeviceGray] cs 0.0 sc
444.779999 227.279999 m
(1.0* )
[4.739896 2.280392 4.739896 4.739896 2.383146 ] pdfys
n
195.179993 395.160004 m
195.179993 370.200012 204.720001 349.919983 216.419998 349.919983 c
228.119995 349.919983 237.600006 370.200012 237.600006 395.160004 c
237.600006 420.119995 228.119995 440.399994 216.419998 440.399994 c
204.720001 440.399994 195.179993 420.119995 195.179993 395.160004 c
/E1 /ColorSpace findRes cs 1.0 1.0 1.0 sc
eofill
1 j
10.0 M
n
195.179993 395.160004 m
195.179993 370.200012 204.720001 349.919983 216.419998 349.919983 c
228.119995 349.919983 237.600006 370.200012 237.600006 395.160004 c
237.600006 420.119995 228.119995 440.399994 216.419998 440.399994 c
204.720001 440.399994 195.179993 420.119995 195.179993 395.160004 c
h
0.0 0.0 0.0 sc
S
[/DeviceGray] cs 0.0 sc
213.659988 383.399994 m
%ADOBeginSubsetFont: COBNCE+TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
/COBNCE+TimesNewRomanPSMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/B <1C60D8A8C9B64EDFFBC13662E45548907DF94CFDD8366168A19798D3F940
23374D4D2C86938E32D7DB9C1872F3A204253AB72EA5DE94FC03994C8EF8A3AE
A69543654A5C81A183CE8AEAD100B0BA927EF2453AE33B886ED98847317AAC24
83A7B07D884E6BA01DCB84EDD0DBB4BCDE82582971377C63466C51717F481B41
2F62082ABE2DA40B3D1CD64A6F92915DAB718445366AAC40CD207CDC2AEAFBF7
5F78F4F875F819FE068F712E647D09F9C9585654CB217F940FB0CC4A0399BD16
E20306B0AE361121402EB02A27DB6252E098ADE7CC6B62128FF27D9B35E95597
8F8F1CC87FEE6B14877366567A52B860F7D53BC608D1A75802EE31B412> |-
/M <1C60D8A8C9B59F85E8A8526E50FEB33438675EDBBD0866093A4555E3EA3A
35849B91EFFB88205281CC77395AC14DF328B50F1F179210F0307F50BFB242AA
7F76F18203303EF0BF46B76E61FB539D568EF9F434EC657F4C5CDE1BCAA90A83
BAFEB02869664DC06CC8CA4FA1E876C39F3F5371AD261F117CDAF8F6A4E96ECA
4F5088752E105CDEB8FBEB2F7F82D31A2FEB6DF3C053295A006D723DEE7CEF30
A9F16E8C6EE80DDA09053247> |-
/D <1C60D8A8C9B6079F62679EB6BE171B70F78590F81AB62F69F1BD2EFC86EA
E566847745E296D0CF61872DA4D8690C62AB23EE8E1DEB0EAD4BD93A2494CA75
9A81248BAF55E0D2E2E5FE71261287BF00F8CDF501793AB3272F80F7AE3E407C
A730AC3648B3AC2D58C8D1FD60CD7DB1F886A79A4080D8870256B6E127906D50
0379950803F077453028FB6169> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/COBNCE+TimesNewRomanPSMT findfont /Encoding get
dup 66 /B put
dup 77 /M put
dup 68 /D put
pop
%ADOEndSubsetFont
/N12 [0.0 10.330307 -10.330307 0.0 0.0 0.0] Tf
(BMD)
[6.881095 9.174424 7.449186 ] pdfys
225.599747 387.359589 m
%ADOBeginSubsetFont: COBNCE+TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
/COBNCE+TimesNewRomanPSMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/parenleft <1C60D8A8C9B81F2C3AC09B674C4ECE2BEF4D70AD3508D915EA9A
E12419376F6EEF231ECE8179CA4531F29291ACACE060AEF98AD6F2FFF2BEA533
946FFA1C8BC3953D72A31BB8ABD9782D71B2146F964D99646263E2D414F84FA0
49D36B9B13B7F6C8AA7A4A5EB0> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/COBNCE+TimesNewRomanPSMT findfont /Encoding get
dup 40 /parenleft put
pop
%ADOEndSubsetFont
(\() show
225.599747 390.779938 m
%ADOBeginSubsetFont: COBNBD+TimesNewRomanPSMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
/COBNBD+TimesNewRomanPSMT 1 GetGlyphDirectory
536 <001C60D8A8C9B7B07F0411694621A7FB8577C297269D0CCCD404180E818
556027AFF99426E7D0FB90B3C964EB1A685CEF549D0B0DE7F6086CA7E913BFCA
C4720880EFD0F37AF76E43949AAB18A604CCB42C3CE161C028AD69D8312A92E7
EF7FE6897A46499D4D67A07F9F74661FBEF6E04728474CFAFDA08FA0F9D62> |
!
end
end end
%ADOEndSubsetFont
/N11 [0.0 10.330307 -10.330307 0.0 0.0 0.0] Tf
(\002\030) show
226.979996 396.23999 m
/N12 [0.0 6.604401 -6.604401 0.0 0.0 0.0] Tf
(1) show
225.600006 399.47998 m
%ADOBeginSubsetFont: COBNCE+TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
/COBNCE+TimesNewRomanPSMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/parenright <1C60D8A8C9B81F2C3CA029BC286E27661FD7F18B990CFF4A0AF
58404A2F35E11D14FBA406192D392AD203A879E34B8FA3132863211808E5BD63
BDAA607B8E04E23E92C61AAA8B57E5E7609689020D20EB927A1EC6CC0BC06B54
0A016D558248DC4A3E8183F5F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/COBNCE+TimesNewRomanPSMT findfont /Encoding get
dup 41 /parenright put
pop
%ADOEndSubsetFont
/N12 [0.0 10.330307 -10.330307 0.0 0.0 0.0] Tf
(\)) show
n
135.959991 304.859985 25.320007 73.380005 re
/E1 /ColorSpace findRes cs 1.0 1.0 1.0 sc
f
0 j
8.0 M
n
135.959991 304.859985 25.320007 73.380005 re
0.0 0.0 0.0 sc
S
[/DeviceGray] cs 0.0 sc
149.400009 316.679993 m
%ADOBeginSubsetFont: COBNCE+TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
/COBNCE+TimesNewRomanPSMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/S <1C60D8A8C9B7EF32243DA21D5631D8766D74D715030BA7905332A0CFAC49
387DB487F69FE973B04989A1F5B84226AC0574A3AC8A92A20A67AC6A93CF1F8D
7D050DEAAE8CF31B4A5FB504F0A0814E8C9022E7C7EFFB00070B62EB780F5BFD
7AC1407620155D4B738E953EA9E8519FCB3635DEED6C82D9AB968BE1131CEEB6
B072A246B745E2E47F0890CD4A4DD5061C30741173A5782D0F5AE0E645337518
CA765AC1ABF9ABB13F9D6F8666630C08F558B2481DA8B87ED77BEC388B2ECEC2
66611153AE13982C83253B299956C6C5717F3CB0B6899649643D82143BA76C24
58D02EBF7DB3967EF4781C5F230BF39531EAC04CB32FE5C79365FE4733BEB452
51337CCC489161A0A8D7D1> |-
/p <1C60D8A8C9B7A73DDE03BEEA75B31F61E78B8C94AAF630ACAE1A607BD40E
B48302A40F17E763F71E8B5595B8EEEBB33C0827EEA0DE5370DD4C7A09244048
D0DA814D6E79BAC2B8E456D2F119496FF35E5A13F4B8F71ECD895B10E20FBAC6
66023D0941B5A0FF139CBD18745BC2892DD91EE541EAD2B54AF0839C3327F759
04A81A3805CFC7AF83735A7079B305271753A14327F3CB693ACCFE5C9D6A3B84
31B357819DFFAD81BD2A60573E4CA4C48EC0A5E07291768D829E6A70067C076E
94545FD4D8E2BB7431617263A47DB04F0B8630D6AB06FF2DD1B1F383A59D02DF
1C7730E7CC0F462D79552DFA> |-
/i <1C60D8A8C9B854D0F4318DEB2BF4A8C14C2FAB601E0ED2FF31B9BA2C4F4D
9D824A65F9E753CDA6D59F3AE6B969EC176D4AA1F064BFADF6F4B6A5454B78F9
8C4B41AC403B87C0044C2A2776BF32D7D2C5370D6DB44827DB4719A169BBE365
B0C0BED49A30732BB5E35B7101E488713F0203C9161D1F92C48C80A640085090
E2C5D79817DC05EB1FC5E4D24EE71772E51241DF9FD4D574115CFC53427DCBCB
8CA3E9F85837FAC6> |-
/n <1C60D8A8C9B7A73DB913C38909CDA29FD53BC2807766C389AFB9ED86F7BC
81642DEC755C464ECEF36210D9B2C516FEA8C1248DF87B00C42E8B7B13BCCD9D
4DADECDD469C646397E88CF560CD28B02CAE7D1B9203699A1DE9CF796CD494DF
60582CAFD70B7F17C1569B79CFC1B11937F06CBBF98FB3F8ABA83215B2800261
30687B8B88299FC622B1B9C743E6B4E2D3E657B3D5566E1938323637D7929F2E
277006B7F4C91822AAA6911E494E2AD0998CB1FC1434E1920012738BB988F6A0
027198438FE663C2EACF82CEB86F7C727594> |-
/e <1C60D8A8C9B77FE2C19119FE019B929F076F8319E8913467AECA41BE2BEA
D3EC175346E3F888D3AD76D215AD69034A954DFD661ECBEA3B145468480B6A15
F5C865D2083DC0B04744AA76DE4CC9E0C9DBDCC2C59DAA00F28A6A47092C7FFA
0397DC47C5CBBA69AD805D3DD20D56411E92B0DE9E3F19C2FDEE1FA501318984
A59E1CFFFD06EA629758085868D3F5F7204292> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/COBNCE+TimesNewRomanPSMT findfont /Encoding get
dup 83 /S put
dup 112 /p put
dup 105 /i put
dup 110 /n put
dup 101 /e put
pop
%ADOEndSubsetFont
(Spine BMD )
[5.748814 5.170319 2.876989 5.170319 4.591824 2.640427 6.895557 9.188887 7.463648 2.640427 ] pdfys
n
381.47998 282.119995 m
381.47998 257.220001 391.079987 237.059998 402.959991 237.059998 c
414.779999 237.059998 424.380005 257.220001 424.380005 282.119995 c
424.380005 306.959991 414.779999 327.119995 402.959991 327.119995 c
391.079987 327.119995 381.47998 306.959991 381.47998 282.119995 c
/E1 /ColorSpace findRes cs 1.0 1.0 1.0 sc
eofill
1 j
10.0 M
n
381.47998 282.119995 m
381.47998 257.220001 391.079987 237.059998 402.959991 237.059998 c
414.779999 237.059998 424.380005 257.220001 424.380005 282.119995 c
424.380005 306.959991 414.779999 327.119995 402.959991 327.119995 c
391.079987 327.119995 381.47998 306.959991 381.47998 282.119995 c
h
0.0 0.0 0.0 sc
S
[/DeviceGray] cs 0.0 sc
400.919983 259.5 m
%ADOBeginSubsetFont: COBNCE+TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
/COBNCE+TimesNewRomanPSMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/A <1C60D8A8C9B6079F6D0C3DD1DA701F2FEF50BE2CCF679467EAB463D54C49
5B1FC98737C4805A67EB9B211579E256E1BCD120087B7083980EFC748D95F15A
9738703A6CB4125517112E8D63595864B93D16C7B325AB1759098D24D8A43A63
AEECA533864B64013C499C4207455D5210408E58672A172F78CB14D739850711
02DFA93B6532> |-
/d <1C60D8A8C9B7A73DB9CAB5EAE520FF5085D357A7F1B1CBAAAB9D3C3D2030
65B58561B55699E1F852D974E24DCDB3FAC1151DF1DB63800C3FA779DDD3329A
86B4E9458DA578ECA7DC82AB1CB5558FB398EDD8AF237A44BB61AD8FF07FB857
EAFB03E3B7223E134D0A703B89A6CB54355CD1F1518C86E0EAFDD151579F5CCB
01DCDB1BD56096AB78D2E9ADD609F7B156D422E9074A62B38BF35F82A0AAD104
E0C2CB94DA5F3F39F8DB246ADB5F008F682AF80FAED0C691E7A618879362783A
36815EA1CE5876FAC4F83CDFE1BD4A> |-
/r <1C60D8A8C9B81F2C3A9916C4CB28F21023538C2A69D3E08B0A448624D2CE
6C19473DC07A6A4C3E0D8D2DFD7B9589F2461E064A251BFFB4F1472DE500E983
E2E667F5383BBA338778795701927E45FB048834AFB7FF5E045C79CAD4F90B53
A8A93629365ECF1B64B7916DE5DAB65845D9DB9B71D2B7B722597153CE4BA455
AAC1333D36087A511839B6E1301E787D03299ED6FB7E787777CDACC74EC37D8C
360275B503E4954E912CD342> |-
/o <1C60D8A8C9B7A73DB903ADC070A7C49752E736186D1727D7954B8F3DD441
6250EFB2715F7FEA4B4F24611BB7B770A0989FFD12258A4EC0D90DD9998BDAF9
96A44DE027AE6C486FF30337F30EB574748A139900482713C8EF6F8455DA4367
02294DB22515A99C4ACC57A269598D687C25D5F66128E3441FE6E0D99B55B68D
9C19E720D771564C6692898D127FC55C985D08C7E6B95F874FD094> |-
/g <1C60D8A8C9B7A73DAC44F2C448ECAF253E44055AA4AFC4D4E618BBF7F608
47F4AD57852D125F52503D138EEBB5C35DB7E6FF089D85EF3D59177D6853B7FF
4DCA48A2C6450DAF6AE7485D918680B6246955433B7E96C0D52B86F6985D93AE
A8FD99F7CE5A6EDF9F82F3DCD54C24AC7F5725E8D752728B16161496E9D02EA7
07BCC03E7CE1BDA2E3632B4A11707F59DF2FD8556EC51A6594DBA10EC63EB7A8
585255CC0C8C8B32CD6316A41829AE725CE606F4A4FD4DA668556D79F4AC25BF
9E697A5DB9F54B573E1EAA6D791100EAD10708C7E706E8CBDD596589510D4EA4
5E3CA12E8144CF2A4E025D5293F77BF25BA77276DF7C97999133B17612ABFFD7
0E77479B9C8ABBB3A51D3A6F6F66CA99610B1A23618D13E1A07B26D29ACFC819
1E5B2829F3C990A5C474E53FC8B282F11A7FFA86D56BD2349AEC811B22D30027
81921B9EDDEAA1B62C5F206266BA751F865F9A5F5AF517BC35F6F732012015D0
BB42652388A219FCF002C2C0335D2D190C0C425C4FA28367480051E56A90DD46
F1C707> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/COBNCE+TimesNewRomanPSMT findfont /Encoding get
dup 65 /A put
dup 100 /d put
dup 114 /r put
dup 111 /o put
dup 103 /g put
pop
%ADOEndSubsetFont
/N12 [0.0 11.289795 -11.289795 0.0 0.0 0.0] Tf
(Androg)
[8.148975 5.700217 5.64264 3.75716 5.64264 5.64264 ] pdfys
(e) show
(n )
[5.64264 2.820191 ] pdfys
413.039978 274.320007 m
/N12 [0.0 10.330307 -10.330307 0.0 0.0 0.0] Tf
(\() show
413.039978 277.740356 m
/N11 [0.0 10.330307 -10.330307 0.0 0.0 0.0] Tf
(\002\030) show
414.47998 283.139984 m
/N12 [0.0 6.604401 -6.604401 0.0 0.0 0.0] Tf
(3) show
413.039978 286.440002 m
/N12 [0.0 10.330307 -10.330307 0.0 0.0 0.0] Tf
(\)) show
n
466.079987 180.659988 25.619995 56.400009 re
/E1 /ColorSpace findRes cs 1.0 1.0 1.0 sc
f
0 j
8.0 M
n
466.079987 180.659988 25.679993 56.400009 re
0.0 0.0 0.0 sc
S
[/DeviceGray] cs 0.0 sc
479.519989 192.300003 m
%ADOBeginSubsetFont: COBNCE+TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
/COBNCE+TimesNewRomanPSMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/hyphen <1C60D8A8C9B81F2C797FA61189B8881D0DB497EEC4F8> |-
/I <1C60D8A8C9B81F2C3A0A02564E7D4C279888DF3754179E93227DE304C0C9
64F0884ECCD4584153E47F1EA31388FE202C61849A093340FE4B9D53774AFF48
A8CAE2304CA5B92609AD38240AA6AEAF6E8AB66763220047F647E30DE8B74D2A
7DF15DDA4EFCA27B915E1B9ED43E7C12> |-
/O <1C60D8A8C9B6079F6288DCC34B8AB15434B53D5CBCF7E29104F391BE1572
E1D4E07ABEE690B714C43DA0F68F9B727CD1B8007FE243EEEBD45E7815504A31
13BAFAC54AC3D3B019A1C9ACF716BD3362CCEE1A09F2069AE9AF5406AA47EF07
6128BEB6A74EB29D02BFBE8F43F41B56E48CC0FA84987A887327DB516D9441F2
C6BDCB9AC2AD82E8> |-
/L <1C60D8A8C9B7D8BE1910D0EBEC744B6638E6ED4C6FC0AF39F5B8B10BFA09
270956A997B577BBD8E3EC179B174ED931484CCFFCF819D4978AE37145A7A3C2
21DF78A5AAD08DFCBE2638BCFCF6B4930FFFAD1163890B85697ECB905727AF12
A0E5C1679B01834AD8D0C4111313E17E548887938F4F64DA1DB39BD7CD68748B
847D2C24AD687E0CDB56> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/COBNCE+TimesNewRomanPSMT findfont /Encoding get
dup 45 /hyphen put
dup 73 /I put
dup 79 /O put
dup 76 /L put
pop
%ADOEndSubsetFont
(5-DIOL )
[5.130031 3.480203 7.423359 3.480203 7.423359 6.361324 2.547454 ] pdfys
n
220.619995 265.5 m
220.619995 240.419998 230.220001 220.080002 242.100006 220.080002 c
254.039993 220.080002 263.639984 240.419998 263.639984 265.5 c
263.639984 290.579987 254.039993 310.859985 242.100006 310.859985 c
230.220001 310.859985 220.619995 290.579987 220.619995 265.5 c
/E1 /ColorSpace findRes cs 1.0 1.0 1.0 sc
eofill
1 j
10.0 M
n
220.619995 265.5 m
220.619995 240.419998 230.220001 220.080002 242.100006 220.080002 c
254.039993 220.080002 263.639984 240.419998 263.639984 265.5 c
263.639984 290.579987 254.039993 310.859985 242.100006 310.859985 c
230.220001 310.859985 220.619995 290.579987 220.619995 265.5 c
h
0.0 0.0 0.0 sc
S
[/DeviceGray] cs 0.0 sc
239.159988 247.139999 m
%ADOBeginSubsetFont: COBNCE+TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
/COBNCE+TimesNewRomanPSMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/E <1C60D8A8C9B7D8BE19945133FE501067A24BBF08B984801DD42E090C7BFC
A94BE6C4AA953A8A674F2ED3DEE261A8700CA873A3A1D3699D8129F8FA28DE52
C44FD8214EA37190B26E64C97677BF6E1856F59EF49286A31D4133D861C74CDB
92794376B13E311920B8F547FC8F105147550894C833300FA326DF7877402F2A
3FD3184C9B8E130B79DB62E2735C65FD4E7A86140D8A7D764E8F05488CC19495
58757A62743714E5384E2EF166B32CB849712A9C93B7CF04FCFE8063494A215F
A79B98816AEC20BC3F> |-
/s <1C60D8A8C9B7361F027554B74948DF9D509740193A97E4C5A946CCDAC22A
CE16A97A38CAF70766C30631C22477718670FA129F481BA880FC6C2A8C233A03
9A7A46ACD6F3CA0422B1CD13AB9E5980A98B78F274FD5FB0A519013427E3DF40
BD973F22C9B236BE3D27B0A78749138244A4ED344575D4F7F677439F8C2359FA
AB210EA03D2DAABF38A6B5B4F0819D6E85CC68A9859B12239E01058FD0C7C593
B22AC00DE1C2A90508610457C5DFEA41C78C4C677B338B4C0ED41B0474AF509B
93D8B3403DD443273DAE4F97B7CDCA81379AB0933639> |-
/t <1C60D8A8C9B854D0F414EAB29549463C152A8395E080F8A65050DED29448
713A9991EC80B85D2E40BC855D0C9C1C8F48B9F54A9F2AF77E5AE0CF2D93DC43
DDEECA57457D57C32A4E7F92D72E19B411BD6A8FD776B503B1ED0E4E775E798B
36CAB4543E392F481E83DAF858D3B1A895E3CC06AB3573C04543D9> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/COBNCE+TimesNewRomanPSMT findfont /Encoding get
dup 69 /E put
dup 115 /s put
dup 116 /t put
pop
%ADOEndSubsetFont
(Estrogen )
[6.321036 4.027865 2.881121 3.449213 5.17445 5.17445 4.595956 5.100072 2.591874 ] pdfys
251.099747 257.759552 m
(\() show
251.099747 261.179901 m
/N11 [0.0 10.330307 -10.330307 0.0 0.0 0.0] Tf
(\002\030) show
252.479996 266.639984 m
/N12 [0.0 6.604401 -6.604401 0.0 0.0 0.0] Tf
(2) show
251.100006 269.880005 m
/N12 [0.0 10.330307 -10.330307 0.0 0.0 0.0] Tf
(\)) show
n
135.959991 406.380005 25.259995 73.320007 re
/E1 /ColorSpace findRes cs 1.0 1.0 1.0 sc
f
0 j
8.0 M
n
135.959991 406.380005 25.259995 73.26001 re
0.0 0.0 0.0 sc
S
[/DeviceGray] cs 0.0 sc
149.400009 422.220001 m
%ADOBeginSubsetFont: COBNCE+TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
/COBNCE+TimesNewRomanPSMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/H <1C60D8A8C9B6079F62C8472A58E49E4C65298F7DBB13584B0C608B103B8F
2B0C72AF215D43C457FE4678B9114F992A1CA0DD95AD962EE67821EBE89C76AF
7B7C203022FE3C67E29F7C9AA5921E4D15A2645D93C73845A47B6C4F855F057F
BA3B47AC2707354E73F37A88912B11BC586C19F99285C7E09F7C6AE400A135AD
2578B2C1702C267512A0254A355FAF242A3E032C2D5773AA8E4D90998616B06D
E2126832E624AA95B6CEA6DE0CF980ABC5058497B243E4F1F614D2E3330AC509
CE2BF6F280235C57C7347C7DBE389D9DA8C428E4F439ED717BD43889835C90DE
66BDF27965E2CAF6D3F8A236> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/COBNCE+TimesNewRomanPSMT findfont /Encoding get
dup 72 /H put
pop
%ADOEndSubsetFont
(Hip BMD )
[7.483275 2.896617 5.100072 2.640427 6.839773 9.238472 7.437822 2.640427 ] pdfys
n
212.159988 524.880005 m
212.159988 499.97998 221.580002 479.759979 233.279999 479.759979 c
244.979996 479.759979 254.400009 499.97998 254.400009 524.880005 c
254.400009 549.839966 244.979996 570.0 233.279999 570.0 c
221.580002 570.0 212.159988 549.839966 212.159988 524.880005 c
/E1 /ColorSpace findRes cs 1.0 1.0 1.0 sc
eofill
1 j
10.0 M
n
212.159988 524.880005 m
212.159988 499.97998 221.580002 479.759979 233.279999 479.759979 c
244.979996 479.759979 254.400009 499.97998 254.400009 524.880005 c
254.400009 549.839966 244.979996 570.0 233.279999 570.0 c
221.580002 570.0 212.159988 549.839966 212.159988 524.880005 c
h
0.0 0.0 0.0 sc
S
[/DeviceGray] cs 0.0 sc
230.580002 500.459991 m
%ADOBeginSubsetFont: COBNCE+TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
/COBNCE+TimesNewRomanPSMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/a <1C60D8A8C9B77FE2CEA139CB15A16492F485162FE605BA10F460B6DC550D
EC7BA0BCA1B89C8429260417FE96BA758C22F6762386C9F1CAF53456C89D4C6B
177AA810FBB608A57F053C4DA17FD8A122DD63CD2EE0563B0FFA48FEF5CBDB33
3E4EF010579993E238020BE59CA5D3F31F329BD506C436A3A2AAAB6CBD385FDB
0E5188BC3D34A31214C941C253FAF1F818F84A3F73340CA7F3B7A85C87022E70
BF3FF56918287082AAA1D7B6CDE998BE3D8663592D3F0DEFC69D87A351A29895
DE83B0D7478C3C01D85F944C563EFCF85986470E4B8EDEEDC025A0FB3217B737
B99EB7B6E2243F66B907475D1C465D1D07EDFEFC5123FE5A4D48A8B15BE3272E
F1EF1464C3F0D45D7CBB8749AF571E09> |-
/b <1C60D8A8C9B7A73DB90B311171EB67EB8746E2EC8FC994CCA7A632F7C7E8
F4A5D28D725796F2BC8526696060F460C892CC5686CD97F757C6EFB11E42DD9A
F110BE11F49DAEFA324F62E3046D4E2410C0923EDB87332B0381414594D39992
4398EF0A71772EF0EFEA72F5940C288418E4FCC7A2DE1E6A1AEA513FBDA0D660
3C38C9676D3489A418D7163D5E50FB679144E02901D98844D885CA3AAF379A83
F23AED1F56FC130F21> |-
/l <1C60D8A8C9B854D0F40B290C0C99C039EA88FDD293C1FEAB15D2F6B8C430
4B804359B3D0D65BDEA0D88729E64427E3419A10B738DDC7E088BBD8945ACB61
835A48EBA8C802212C0DB31532F4970F8ED45D647A3A5E3740CED526D44BDD43
D243B3E6941F395CC1C84C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/COBNCE+TimesNewRomanPSMT findfont /Encoding get
dup 97 /a put
dup 98 /b put
dup 108 /l put
pop
%ADOEndSubsetFont
(Metabolites )
[9.199217 4.602154 2.88732 4.602154 5.180649 5.100072 2.88732 2.88732 2.88732 4.602154 4.034063 
2.598072 ] pdfys
242.51976 517.14032 m
(\() show
242.51976 520.560669 m
/N11 [0.0 10.330307 -10.330307 0.0 0.0 0.0] Tf
(\002\030) show
243.900009 526.019958 m
/N12 [0.0 6.604401 -6.604401 0.0 0.0 0.0] Tf
(4) show
242.519989 529.26001 m
/N12 [0.0 10.330307 -10.330307 0.0 0.0 0.0] Tf
(\)) show
n
466.079987 254.039993 25.73999 56.400009 re
/E1 /ColorSpace findRes cs 1.0 1.0 1.0 sc
f
0 j
8.0 M
n
466.079987 254.039993 25.73999 56.400009 re
0.0 0.0 0.0 sc
S
[/DeviceGray] cs 0.0 sc
479.519989 266.220001 m
%ADOBeginSubsetFont: COBNCE+TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
/COBNCE+TimesNewRomanPSMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/T <1C60D8A8C9B7D8BE514ED6977CE9F9E5860FEBB6D8EBF5879FDED6C1E48F
6AFEEE7B65DB6C9D492058CAA103CB13A7A80B0015E85F272BB9775991CD9755
6EC3CFB46A4E1606F006216EABEB711074247C72C159202F32CC7F5F403FAE58
110685510DDB32C57700D5067C975D7063A496FE85C1E5> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/COBNCE+TimesNewRomanPSMT findfont /Encoding get
dup 84 /T put
pop
%ADOEndSubsetFont
(TESTO )
[6.302443 6.361325 5.734351 6.302443 7.449186 2.573279 ] pdfys
n
466.079987 327.419983 25.73999 56.399994 re
/E1 /ColorSpace findRes cs 1.0 1.0 1.0 sc
f
n
466.079987 327.419983 25.73999 56.399994 re
0.0 0.0 0.0 sc
S
[/DeviceGray] cs 0.0 sc
479.519989 345.059998 m
(DHT )
[7.472945 7.437822 6.326202 2.597039 ] pdfys
n
466.079987 412.079987 25.73999 56.459991 re
/E1 /ColorSpace findRes cs 1.0 1.0 1.0 sc
f
n
466.079987 412.079987 25.73999 56.459991 re
0.0 0.0 0.0 sc
S
[/DeviceGray] cs 0.0 sc
479.519989 420.0 m
%ADOBeginSubsetFont: COBNCE+TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
/COBNCE+TimesNewRomanPSMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/N <1C60D8A8C9B6079FEBDAFCF29D322230C5065046E4D67A459EF87969CF00
4265B137F6A0C323BFE624CC5F6A71367E7D3B5A47418E3A00237A0055A7CBE1
8BFDA8D866DE14E9ACD9FEEED9C92173D4B1F6EB3BB73C969F0D4520EF60BC95
7196312D449C71BF862A53DA4F9B78C2E0BEFD8E4B628FE6A91011A9584BACBF
B9D67A9A8FDEC1D41F9BC8254D1A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/COBNCE+TimesNewRomanPSMT findfont /Encoding get
dup 78 /N put
pop
%ADOEndSubsetFont
(4-DIONE )
[5.100073 3.480203 7.437822 3.459543 7.478111 7.437822 6.331367 2.602204 ] pdfys
n
152.940002 609.600037 25.380005 56.640015 re
/E1 /ColorSpace findRes cs 1.0 1.0 1.0 sc
f
n
152.940002 609.600037 25.380005 56.640015 re
0.0 0.0 0.0 sc
S
[/DeviceGray] cs 0.0 sc
166.319992 627.359985 m
(ADT)
[7.440922 7.440922 6.294178 ] pdfys
n
195.179993 609.600037 25.440002 56.640015 re
/E1 /ColorSpace findRes cs 1.0 1.0 1.0 sc
f
n
195.179993 609.600037 25.440002 56.640015 re
0.0 0.0 0.0 sc
S
[/DeviceGray] cs 0.0 sc
208.619995 621.900024 m
%ADOBeginSubsetFont: COBNCE+TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
/COBNCE+TimesNewRomanPSMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/G <1C60D8A8C9B6079F6D6E36005945EC7274CF8CD5EF5B42D280E6D8A4F608
6ADC4B88F4BA16F6A237691F3F760A6129A67DCE9322616B1D7BB21115511238
376B94C01432A999E95ACF02B9743B28C7A3C8109C25013AEA47EC71807E3BFE
6B26986496C6B96A2458AF130FF55F6939E40BA894719E24A717462CC4A00B11
ADE5809AB1E0B4D7805897BE50087CD64F5AEA7744526E08B0D657538988C41B
FE39A8735842D620E001E1A863F676AFB361CF4C81718CBC4A0CC5AC0D51A34A
CA7D8BBE5B5D6E8D466D858B118FBBA2161DB0F7E151EB0958EF2C5C3F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/COBNCE+TimesNewRomanPSMT findfont /Encoding get
dup 71 /G put
pop
%ADOEndSubsetFont
(ADT-G )
[7.440922 7.497738 6.294178 3.422354 7.497738 2.565015 ] pdfys
n
237.600006 609.600037 25.380005 56.700012 re
/E1 /ColorSpace findRes cs 1.0 1.0 1.0 sc
f
n
237.600006 609.600037 25.380005 56.700012 re
0.0 0.0 0.0 sc
S
[/DeviceGray] cs 0.0 sc
250.979996 631.679993 m
(3G)
[5.151724 7.445054 ] pdfys
n
279.899994 609.600037 24.899994 56.820007 re
/E1 /ColorSpace findRes cs 1.0 1.0 1.0 sc
f
n
279.899994 609.600037 24.899994 56.820007 re
0.0 0.0 0.0 sc
S
[/DeviceGray] cs 0.0 sc
293.279999 629.159973 m
(17G )
[5.121766 5.219904 7.415096 2.53919 ] pdfys
n
381.47998 508.079987 m
381.47998 483.119995 390.959991 462.899994 402.600006 462.899994 c
414.300018 462.899994 423.779999 483.119995 423.779999 508.079987 c
423.779999 532.97998 414.300018 553.200012 402.600006 553.200012 c
390.959991 553.200012 381.47998 532.97998 381.47998 508.079987 c
/E1 /ColorSpace findRes cs 1.0 1.0 1.0 sc
eofill
1 j
10.0 M
n
381.47998 508.079987 m
381.47998 483.119995 390.959991 462.899994 402.600006 462.899994 c
414.300018 462.899994 423.779999 483.119995 423.779999 508.079987 c
423.779999 532.97998 414.300018 553.200012 402.600006 553.200012 c
390.959991 553.200012 381.47998 532.97998 381.47998 508.079987 c
h
0.0 0.0 0.0 sc
S
[/DeviceGray] cs 0.0 sc
399.959991 486.23999 m
%ADOBeginSubsetFont: COBNCE+TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
systemdict begin
/COBNCE+TimesNewRomanPSMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/P <1C60D8A8C9B7EF322B88F9F448EE5C6C6600BEF9C3C9A017B9BABF876458
925BFD3DF1270B888D0A52682DD77562B0592DCEFA4305CC7C82B5C217C153D7
D799EF75C3E1B47B2F2C3741BE023ABA656D3600645948113D9E1ACE5988E886
C2CAB89042DA868AC9EEC60CE17BA00926C89C442DF26FC8F7E4DF94B56A18CF
B31DE37DED0B361C6E9E1A158721E9F2BF357AD3A9D82EC3F61E7737142FF120
86F5CF2AAB01A87FB3B34AEED6F7C6CCE06EC32D6DE2EC0B548299344251FBC6
28> |-
/c <1C60D8A8C9B77FE2C180CE42B4078449B9D767742AB4CF5971DFD438ECC5
4400989182964B065BACA704BA363536AC987FC433F59A23A3DC16CBD969F42A
6041BB8327C43B9105FC5DF44A0437E9E26FE545542A602D007FC6A926264F9C
2999730E7919239B324086FEA852156F456647AA0692084759C352D699897179
9F4BEF3EFB7DE91C98C83C567200278FF2145E16D28EDE7556C59DB204> |-
/u <1C60D8A8C9B7A73DB9860E0681DA8AEA1E5FBC1C72A452614FEB33CC58A1
99CCF544A550BDEE35652D618DE4A02AA9CF0753ADA232102DC8DC25CB958152
D1B74BC447B68C074C25C2126470565A20B42A419CDD0C7A1DA63C6A764D555B
867A9BE961ADBD0AF5B2007F47FCC9435F8B51D3F3A5D83941DD57A0C4D32E16
9A6BACC26F8AD3C9372F1114911D1D3F3FB2725FADBF9F529AA2CFB178B79F97
520325221F3417C7781EB09765> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/COBNCE+TimesNewRomanPSMT findfont /Encoding get
dup 80 /P put
dup 99 /c put
dup 117 /u put
pop
%ADOEndSubsetFont
(Precur)
[5.739516 3.480203 4.582527 4.582527 5.161021 3.480203 ] pdfys
(s) show
(ors )
[5.161021 3.480203 4.014435 2.578444 ] pdfys
411.839844 502.380035 m
(\() show
411.839844 505.800385 m
%ADOBeginSubsetFont: COBNBD+TimesNewRomanPSMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.
/COBNBD+TimesNewRomanPSMT 1 GetGlyphDirectory
543 <001C60D8A8C9B77D5F8A3588A21FDB172513BA7D00ACE378598BEE0B1B5
727C81B06279481B0B4C56FEE37CC10206F6A346A6AE563A088C111CCAF653A7
6261361E1A33F7C5BEDFB88754D0E224840AF45AB9E4DA594F528CC539E77115
59FB7C2963E52D2B7E269CD849AAA0F3E0E0DB9D2D909F3796EC9DE8618638CC
2201838804C2418D51ED95FA771CCE2959C31810F804A89E36D38A38191CCC06
9D3255E3ECA3AF307A0943B9CD9C1CD78C304F7C714C879809EA4A90E4EDA0F4
90AE4ADA60FAB457D9FF208D08272F2BB4B6480D54EEAB0E25566E2B295FC866
62ABD6638A551409D525E22A150985EA738614ED3F572B0E8987AC27FBDB3608
926CA63DF4F55BE9CBCAA8A0F949923729F09D59EB8D2BCC59CBA9186691DBF8
BD89ADBE8D2CD2EF676ED8DDC73818719936B401DF4> |
!
end
end end
%ADOEndSubsetFont
/N11 [0.0 10.330307 -10.330307 0.0 0.0 0.0] Tf
(\002\037) show
411.839844 510.420105 m
/N12 [0.0 10.330307 -10.330307 0.0 0.0 0.0] Tf
(\)) show
n
466.079987 485.459991 25.859985 56.459991 re
/E1 /ColorSpace findRes cs 1.0 1.0 1.0 sc
f
0 j
8.0 M
n
466.079987 485.459991 25.859985 56.459991 re
0.0 0.0 0.0 sc
S
[/DeviceGray] cs 0.0 sc
479.519989 499.440002 m
(DHEA )
[7.440922 7.440922 6.294178 7.497738 2.565015 ] pdfys
n
466.079987 558.839966 25.73999 56.580017 re
/E1 /ColorSpace findRes cs 1.0 1.0 1.0 sc
f
n
466.079987 558.839966 25.73999 56.52002 re
0.0 0.0 0.0 sc
S
[/DeviceGray] cs 0.0 sc
479.519989 568.200012 m
(DHEA-S )
[7.477077 7.438855 6.330334 7.437822 3.45851 5.762243 2.601171 ] pdfys
n
127.439995 95.939995 25.500008 67.68 re
/E1 /ColorSpace findRes cs 1.0 1.0 1.0 sc
f
n
127.439995 95.939995 25.500008 67.739998 re
S
n
423.839996 282.600006 m
461.399994 282.600006 l
461.639984 282.47998 l
461.759979 282.23999 l
461.639984 282.0 l
461.399994 281.880005 l
423.839996 281.880005 l
423.600006 282.0 l
423.47998 282.23999 l
423.600006 282.47998 l
423.839996 282.600006 l
h
460.440002 285.059998 m
466.079987 282.23999 l
460.440002 279.419983 l
0.0 0.0 0.0 sc
f
n
424.139984 282.419983 m
464.220001 207.600006 l
464.220001 207.300003 l
464.039978 207.119995 l
463.800018 207.059998 l
463.559998 207.23999 l
423.47998 282.059998 l
423.47998 282.359985 l
423.660004 282.540009 l
423.899994 282.600006 l
424.139984 282.419983 l
h
465.959991 209.580002 m
466.079987 203.279999 l
460.97998 206.87999 l
f
n
423.539978 282.419983 m
463.440002 351.720001 l
463.679993 351.899994 l
463.919983 351.839996 l
464.100006 351.660004 l
464.039978 351.359985 l
424.139984 282.059998 l
423.899994 281.880005 l
423.660004 281.940002 l
423.47998 282.179993 l
423.539978 282.419983 l
h
460.859985 352.139984 m
466.079987 355.619995 l
465.720001 349.320007 l
f
n
423.839996 508.319977 m
461.399994 508.319977 l
461.639984 508.259979 l
461.759979 507.959991 l
461.639984 507.720001 l
461.399994 507.660004 l
423.839996 507.660004 l
423.600006 507.720001 l
423.47998 507.959991 l
423.600006 508.259979 l
423.839996 508.319977 l
h
460.440002 510.779999 m
466.079987 507.959991 l
460.440002 505.139984 l
f
n
424.139984 508.139984 m
464.039978 438.839996 l
464.100006 438.600006 l
463.919983 438.359985 l
463.679993 438.359985 l
463.440002 438.47998 l
423.539978 507.779999 l
423.47998 508.079987 l
423.660004 508.259979 l
423.899994 508.319977 l
424.139984 508.139984 l
h
465.720001 440.880005 m
466.079987 434.579987 l
460.859985 438.059998 l
f
n
423.47998 508.139984 m
463.679993 588.719971 l
463.919983 588.900024 l
464.160004 588.839966 l
464.339996 588.659973 l
464.339996 588.359985 l
424.139984 507.839996 l
423.899994 507.660004 l
423.660004 507.660004 l
423.47998 507.899994 l
423.47998 508.139984 l
h
461.039978 588.959961 m
466.079987 592.73999 l
466.139984 586.440002 l
f
n
194.940002 394.919983 m
163.860001 436.319977 l
163.73999 436.559998 l
163.919998 436.800018 l
164.160004 436.859985 l
164.400009 436.73999 l
195.479996 395.339996 l
195.539993 395.100006 l
195.419998 394.859985 l
195.179993 394.800018 l
194.940002 394.919983 l
h
162.419998 434.100006 m
161.279999 440.279999 l
166.919998 437.459991 l
f
n
195.479996 394.919983 m
164.220001 348.059998 l
163.979996 347.880005 l
163.679993 347.940002 l
163.559998 348.179993 l
163.619995 348.419983 l
194.940002 395.339996 l
195.119995 395.459991 l
195.419998 395.399994 l
195.539993 395.220001 l
195.479996 394.919983 l
h
166.800003 347.459991 m
161.279999 344.339996 l
162.059998 350.579987 l
f
n
228.900009 569.820007 m
165.179993 606.900024 l
165.0 607.140015 l
165.059998 607.380005 l
165.23999 607.559998 l
165.539993 607.5 l
229.259995 570.419983 l
229.440002 570.23999 l
229.37999 569.940002 l
229.139999 569.76001 l
228.900009 569.820007 l
h
164.759995 604.320007 m
161.279999 609.600037 l
167.580002 609.179993 l
f
n
228.720001 569.940002 m
205.919998 605.459961 l
205.860001 605.700012 l
206.039993 605.940002 l
206.279999 606.0 l
206.519989 605.820007 l
229.319992 570.299988 l
229.37999 570.059998 l
229.199997 569.820007 l
228.959991 569.76001 l
228.720001 569.940002 l
h
204.360001 603.299988 m
203.699997 609.600037 l
209.100006 606.359985 l
f
n
228.720001 570.23999 m
243.900009 605.400024 l
244.080002 605.579956 l
244.319992 605.579956 l
244.5 605.400024 l
244.5 605.100037 l
229.37999 570.0 l
229.199997 569.820007 l
228.959991 569.820007 l
228.720001 570.0 l
228.720001 570.23999 l
h
241.259995 605.519958 m
246.059998 609.600037 l
246.419998 603.299988 l
f
n
228.900009 570.419983 m
284.220001 607.26001 l
284.519989 607.320007 l
284.700012 607.200012 l
284.759979 606.900024 l
284.639984 606.659973 l
229.259995 569.820007 l
229.019989 569.76001 l
228.779999 569.940002 l
228.720001 570.179993 l
228.900009 570.419983 l
h
282.059998 608.820007 m
288.359985 609.600037 l
285.179993 604.140015 l
f
n
246.179993 219.779999 m
191.159988 193.559998 l
190.860001 193.559998 l
190.679993 193.73999 l
190.679993 194.039993 l
190.860001 194.220001 l
245.87999 220.440002 l
246.179993 220.440002 l
246.360001 220.259995 l
246.360001 219.959991 l
246.179993 219.779999 l
h
193.019989 191.759995 m
186.720001 191.87999 l
190.619995 196.860001 l
f
n
246.479996 220.019989 m
246.419998 196.559998 l
246.300003 196.319992 l
246.059998 196.199997 l
245.819992 196.319992 l
245.699997 196.559998 l
245.819992 220.019989 l
245.87999 220.259995 l
246.119995 220.37999 l
246.419998 220.259995 l
246.479996 220.019989 l
h
248.87999 197.519989 m
246.059998 191.87999 l
243.23999 197.519989 l
f
n
246.23999 220.319992 m
292.859985 194.459991 l
293.040009 194.279999 l
292.97998 193.979996 l
292.800018 193.800003 l
292.5 193.860001 l
245.87999 219.720001 l
245.699997 219.900009 l
245.759995 220.199997 l
245.939987 220.319992 l
246.23999 220.319992 l
h
293.220001 197.100006 m
296.820007 191.87999 l
290.519989 192.119995 l
f
n
237.23999 310.320007 m
222.119995 345.47998 l
222.119995 345.720001 l
222.300003 345.959991 l
222.600006 345.959991 l
222.779999 345.720001 l
237.900009 310.619995 l
237.900009 310.320007 l
237.720001 310.139984 l
237.479996 310.139984 l
237.23999 310.320007 l
h
220.259995 343.619995 m
220.619995 349.919983 l
225.419998 345.839996 l
f
n
381.300018 281.940002 m
241.139999 386.459991 l
241.019989 386.700012 l
241.080002 386.940002 l
241.319992 387.059998 l
241.559998 387.0 l
381.720001 282.540009 l
381.839996 282.300018 l
381.779999 282.0 l
381.539978 281.880005 l
381.300018 281.940002 l
h
240.419998 383.880005 m
237.600006 389.519989 l
243.779999 388.440002 l
f
n
381.660004 502.079987 m
241.619995 403.200012 l
241.37999 403.139984 l
241.139999 403.319977 l
241.080002 403.559998 l
241.199997 403.800018 l
381.300018 502.679993 l
381.539978 502.73999 l
381.779999 502.559998 l
381.839996 502.319977 l
381.660004 502.079987 l
h
243.839996 401.759979 m
237.600006 400.800018 l
240.600006 406.319977 l
f
n
237.900009 479.639984 m
222.779999 444.47998 l
222.600006 444.300018 l
222.300003 444.300018 l
222.119995 444.47998 l
222.119995 444.779999 l
237.23999 479.879974 l
237.479996 480.059998 l
237.720001 480.059998 l
237.900009 479.879974 l
237.900009 479.639984 l
h
225.419998 444.359985 m
220.619995 440.279999 l
220.259995 446.579987 l
f
n
381.539978 281.880005 m
267.600006 271.019989 l
267.359985 271.139984 l
267.23999 271.380005 l
267.300018 271.619995 l
267.540009 271.73999 l
381.419983 282.600006 l
381.720001 282.540009 l
381.839996 282.300018 l
381.779999 282.0 l
381.539978 281.880005 l
h
268.800018 268.679993 m
262.919983 270.959991 l
268.259979 274.320007 l
f
n
381.179993 282.059998 m
256.5 503.700012 l
256.5 504.0 l
256.679993 504.179993 l
256.919983 504.23999 l
257.160004 504.059998 l
381.779999 282.419983 l
381.839996 282.119995 l
381.660004 281.940002 l
381.419983 281.880005 l
381.179993 282.059998 l
h
254.819992 501.660004 m
254.519989 507.959991 l
259.73999 504.419983 l
f
n
398.759979 462.899994 m
398.759979 332.100006 l
398.639984 331.859985 l
398.399994 331.73999 l
398.160004 331.859985 l
398.039978 332.100006 l
398.039978 462.899994 l
398.160004 463.139984 l
398.399994 463.259979 l
398.639984 463.139984 l
398.759979 462.899994 l
h
401.220001 333.059998 m
398.399994 327.419983 l
395.579987 333.059998 l
f
n
381.779999 502.200012 m
265.440002 286.200012 l
265.200012 286.019989 l
264.959991 286.079987 l
264.779999 286.259979 l
264.839996 286.559998 l
381.179993 502.559998 l
381.359985 502.73999 l
381.660004 502.679993 l
381.839996 502.5 l
381.779999 502.200012 l
h
268.079987 285.899994 m
262.919983 282.23999 l
263.100006 288.540009 l
f
n
381.47998 502.019989 m
259.200012 512.880005 l
258.959991 513.059998 l
258.839996 513.299988 l
258.959991 513.539978 l
259.259979 513.600037 l
381.539978 502.73999 l
381.779999 502.619995 l
381.839996 502.379974 l
381.720001 502.139984 l
381.47998 502.019989 l
h
259.919983 510.359985 m
254.519989 513.659973 l
260.399994 516.0 l
f
n
178.199997 135.419998 25.740005 56.699997 re
1.0 1.0 1.0 sc
f
n
178.199997 135.419998 25.740005 56.759995 re
0.0 0.0 0.0 sc
S
[/DeviceGray] cs 0.0 sc
191.580002 158.039993 m
(E1 )
[6.361325 5.100073 2.632162 ] pdfys
n
229.080002 135.419998 25.259995 57.0 re
/E1 /ColorSpace findRes cs 1.0 1.0 1.0 sc
f
n
229.080002 135.419998 25.259995 57.0 re
0.0 0.0 0.0 sc
S
[/DeviceGray] cs 0.0 sc
242.459991 153.600006 m
(E1-S)
[6.306574 5.159988 3.43475 5.738483 ] pdfys
n
279.899994 135.419998 25.679993 56.940002 re
/E1 /ColorSpace findRes cs 1.0 1.0 1.0 sc
f
n
279.899994 135.419998 25.679993 56.940002 re
0.0 0.0 0.0 sc
S
[/DeviceGray] cs 0.0 sc
293.279999 158.160004 m
(E2 )
[6.361325 5.100073 2.632162 ] pdfys
n
PDFVars/TermAll get exec end end
restore

%%EndDocument

LH
(%%[Page: 1]%%) = 
%%PageTrailer

%%Trailer
%%DocumentNeededResources: 
%%DocumentSuppliedResources: 
%%+ procset Pscript_WinNT_VMErrorHandler 5.0 0
%%+ procset Pscript_WinNT_Min 5.0 0
%%+ procset Pscript_Win_Basic 5.0 0
%%+ procset Pscript_Win_Utils_L2 5.0 0
Pscript_WinNT_Min dup /min_terminate get exec
%%EOF
